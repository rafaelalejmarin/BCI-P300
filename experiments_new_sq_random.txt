precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative, actualPositives



*********************************

subject 0
[2, 4, 6, 5, 0, 1, 3, 7]
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

randomizedorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.004863066291272076, 3564, 0.12666666666666668, 0.8852047595146004, 38, 7776, 59962, 262]


randomizedorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.005063291139240506, 835, 0.04, 0.9651894062416959, 12, 2358, 65380, 288]
conv1.weighttensor([[[[ 0.3233,  0.1009, -0.0120],
          [ 0.2885,  0.0195,  0.0456],
          [ 0.1645, -0.2824, -0.1151]]]])conv1.biastensor([-0.1113])conv2.weighttensor([[[[-0.1370, -0.2663, -0.0347],
          [-0.2232, -0.2369, -0.0015],
          [ 0.0708,  0.3186, -0.1760]]]])conv2.biastensor([0.1400])conv3.weighttensor([[[[-0.1163, -0.0973,  0.1947],
          [ 0.3311, -0.3275,  0.2379],
          [-0.2650, -0.0656,  0.0899]]]])conv3.biastensor([-0.1884])conv4.weighttensor([[[[ 0.1012, -0.2816, -0.1340],
          [ 0.0404,  0.0798,  0.0004],
          [ 0.2956, -0.0619, -0.2861]]]])conv4.biastensor([0.1582])conv5.weighttensor([[[[ 0.2795, -0.2965,  0.1819],
          [-0.0857, -0.2449, -0.2201],
          [-0.0433,  0.1972,  0.2441]]]])conv5.biastensor([0.0825])fc1.weighttensor([[-0.0346, -0.0040, -0.0077,  ..., -0.0051, -0.0075,  0.0167],
        [-0.0140, -0.0290,  0.0278,  ...,  0.0184, -0.0322, -0.0050],
        [ 0.0171, -0.0318, -0.0245,  ..., -0.0333, -0.0166,  0.0047],
        ...,
        [ 0.0281,  0.0254, -0.0164,  ...,  0.0283, -0.0358, -0.0135],
        [ 0.0164,  0.0079,  0.0161,  ..., -0.0196,  0.0234, -0.0206],
        [-0.0348,  0.0370, -0.0279,  ...,  0.0028,  0.0304, -0.0016]])fc1.biastensor([ 0.0359, -0.0092, -0.0334, -0.0316, -0.0355,  0.0207, -0.0194, -0.0204,
         0.0219, -0.0321, -0.0079, -0.0370,  0.0321,  0.0158, -0.0228,  0.0339,
        -0.0072, -0.0178,  0.0240, -0.0304, -0.0360,  0.0076,  0.0207, -0.0045,
        -0.0211, -0.0286, -0.0149,  0.0021,  0.0316, -0.0108, -0.0020, -0.0142,
         0.0060, -0.0142, -0.0348, -0.0188,  0.0298, -0.0352, -0.0295,  0.0074,
         0.0044,  0.0245,  0.0060,  0.0212, -0.0354, -0.0176, -0.0049,  0.0213,
        -0.0190,  0.0145,  0.0178,  0.0105,  0.0077,  0.0358,  0.0030,  0.0167,
         0.0100,  0.0348, -0.0191,  0.0151])fc2.weighttensor([[-0.1257,  0.1054, -0.0088,  0.1058,  0.0615, -0.0301, -0.1062,  0.0231,
          0.0519,  0.0841, -0.1070, -0.1035, -0.0088,  0.0409, -0.0692,  0.0541,
          0.0679,  0.1194, -0.0370,  0.0998, -0.1166,  0.1258, -0.1032, -0.0570,
          0.0763, -0.0731, -0.1088, -0.1166,  0.0265,  0.0902,  0.1202, -0.0423,
         -0.0578, -0.0404, -0.0090,  0.0271,  0.0622,  0.0774, -0.0456,  0.0149,
          0.0013,  0.0592, -0.1270,  0.0014, -0.0050,  0.0577, -0.0117,  0.0631,
         -0.0697, -0.0063, -0.1283, -0.1003, -0.0812,  0.0004,  0.0249,  0.0819,
         -0.1028, -0.0845, -0.0866, -0.0992]])fc2.biastensor([0.0375])

*********************************

subject 1
[2, 4, 6, 5, 0, 1, 3, 7]
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

randomizedorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.002403204272363151, 3113, 0.06, 0.8823862742011648, 18, 7472, 56058, 282]


randomizedorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.004962527850921612, 6459, 0.32666666666666666, 0.6906973083582559, 98, 19650, 43880, 202]
conv1.weighttensor([[[[-0.1168,  0.1928,  0.1076],
          [-0.2457, -0.3074,  0.1010],
          [-0.1761, -0.0989, -0.2326]]]])conv1.biastensor([0.1656])conv2.weighttensor([[[[ 0.2991,  0.0072,  0.2575],
          [-0.1388,  0.2673, -0.1936],
          [ 0.2255, -0.1440,  0.0797]]]])conv2.biastensor([0.1000])conv3.weighttensor([[[[-0.0556,  0.3274,  0.2109],
          [-0.0256,  0.2320,  0.2852],
          [ 0.1061,  0.1385,  0.1919]]]])conv3.biastensor([-0.0575])conv4.weighttensor([[[[-0.2911, -0.2651, -0.2653],
          [ 0.2789, -0.0885,  0.2242],
          [ 0.0096, -0.0466,  0.2541]]]])conv4.biastensor([0.0452])conv5.weighttensor([[[[ 0.0342,  0.1271, -0.2002],
          [ 0.3068, -0.1200,  0.0895],
          [-0.2805, -0.0952,  0.1228]]]])conv5.biastensor([0.3172])fc1.weighttensor([[ 0.0079, -0.0080, -0.0254,  ..., -0.0070,  0.0351,  0.0211],
        [-0.0112, -0.0161, -0.0137,  ...,  0.0111, -0.0079, -0.0041],
        [ 0.0315, -0.0112,  0.0190,  ..., -0.0214, -0.0032, -0.0248],
        ...,
        [-0.0089, -0.0168, -0.0311,  ...,  0.0212, -0.0262,  0.0103],
        [ 0.0288,  0.0041, -0.0276,  ...,  0.0091,  0.0013,  0.0276],
        [ 0.0204, -0.0292, -0.0083,  ..., -0.0152, -0.0354, -0.0310]])fc1.biastensor([ 0.0129,  0.0234,  0.0227, -0.0338,  0.0322, -0.0221,  0.0329,  0.0331,
         0.0328, -0.0052,  0.0303,  0.0349,  0.0030, -0.0087, -0.0197,  0.0319,
         0.0241, -0.0194,  0.0058,  0.0299, -0.0084, -0.0017,  0.0323, -0.0054,
        -0.0349, -0.0262, -0.0331,  0.0354,  0.0179,  0.0352, -0.0120,  0.0305,
        -0.0003, -0.0360,  0.0209,  0.0367, -0.0210, -0.0062, -0.0052,  0.0063,
        -0.0096, -0.0051, -0.0061, -0.0169,  0.0171,  0.0340, -0.0027,  0.0145,
        -0.0261,  0.0339, -0.0326,  0.0312, -0.0362, -0.0256,  0.0290, -0.0060,
        -0.0246,  0.0291,  0.0333, -0.0168])fc2.weighttensor([[ 0.0729, -0.0666, -0.0717, -0.0781,  0.0113,  0.0654, -0.1101,  0.0382,
         -0.0826,  0.1178,  0.0727, -0.0439,  0.0465,  0.0188,  0.1140, -0.0071,
         -0.1225,  0.1162, -0.0472, -0.0607,  0.1071, -0.0748, -0.0179, -0.0258,
         -0.1275,  0.0397,  0.0164,  0.0375, -0.0412, -0.1228, -0.0919, -0.1213,
         -0.0535,  0.0181, -0.0135, -0.0849,  0.0194,  0.0409, -0.0902,  0.0162,
         -0.0518,  0.0657, -0.0124,  0.0808,  0.0180, -0.0320, -0.0317,  0.1224,
          0.0461,  0.0635,  0.0754, -0.1209, -0.0938, -0.0800,  0.0758,  0.0697,
         -0.0737,  0.0273,  0.0008,  0.0400]])fc2.biastensor([0.0795])

*********************************

subject 2
[2, 4, 6, 5, 0, 1, 3, 7]
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

randomizedorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.01144137534453015, 19604, 0.9616666666666667, 0.05260157348637452, 577, 49854, 2768, 23]


randomizedorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.010825439783491205, 252, 0.013333333333333334, 0.986108471741857, 8, 731, 51891, 592]
conv1.weighttensor([[[[ 0.0963,  0.2481, -0.1960],
          [-0.0384, -0.2273,  0.0307],
          [-0.2659,  0.1554, -0.0503]]]])conv1.biastensor([0.2513])conv2.weighttensor([[[[ 0.0597, -0.2367,  0.0743],
          [-0.0469,  0.0726,  0.1392],
          [-0.0323, -0.1788,  0.0923]]]])conv2.biastensor([0.0718])conv3.weighttensor([[[[-0.1093, -0.2336, -0.0497],
          [-0.1909, -0.0955,  0.0822],
          [-0.1094,  0.1687,  0.0346]]]])conv3.biastensor([0.1619])conv4.weighttensor([[[[-0.0259,  0.2701,  0.2027],
          [-0.1405,  0.3078, -0.1593],
          [ 0.0612, -0.2822, -0.0843]]]])conv4.biastensor([0.2487])conv5.weighttensor([[[[ 0.1777, -0.2095,  0.1855],
          [-0.3228,  0.0585, -0.2888],
          [-0.2733, -0.1842,  0.3192]]]])conv5.biastensor([0.0803])fc1.weighttensor([[ 0.0086,  0.0117,  0.0175,  ..., -0.0176,  0.0319,  0.0303],
        [-0.0052, -0.0352,  0.0168,  ...,  0.0178,  0.0360,  0.0277],
        [ 0.0275, -0.0358, -0.0156,  ..., -0.0053,  0.0327, -0.0249],
        ...,
        [ 0.0068,  0.0264,  0.0369,  ...,  0.0126,  0.0310, -0.0121],
        [-0.0259,  0.0310,  0.0019,  ...,  0.0237,  0.0330, -0.0303],
        [ 0.0031,  0.0114,  0.0076,  ...,  0.0054, -0.0099,  0.0332]])fc1.biastensor([-4.9610e-03, -2.4347e-02, -3.6695e-02,  3.3820e-03,  1.7169e-02,
        -2.6857e-02,  2.7736e-02,  2.4727e-02,  2.4012e-02,  1.5216e-02,
         5.4488e-03,  1.3873e-02,  6.9398e-03, -3.0685e-02, -2.1083e-02,
         3.1598e-03,  4.8462e-03, -3.1777e-02, -6.4950e-03,  2.8255e-02,
        -3.3594e-02,  1.8848e-02,  9.1968e-03, -2.8605e-02,  3.1286e-02,
        -1.5723e-02, -4.7288e-04, -1.0209e-02, -2.2194e-02, -1.0001e-02,
        -4.9512e-04, -2.3862e-02, -1.9415e-02, -5.3520e-03, -3.9721e-02,
        -7.0434e-03,  7.8671e-03, -2.8192e-02,  1.2438e-02,  5.4836e-03,
        -3.6545e-02,  2.4586e-02,  1.4784e-02,  2.9357e-05,  7.5060e-03,
        -1.8718e-03, -2.4635e-02, -3.6001e-02,  3.9553e-02,  3.0222e-02,
         7.8537e-03, -5.9366e-03,  1.5589e-02,  3.5493e-02,  1.0285e-02,
        -1.6502e-02, -2.8001e-02, -2.1467e-02, -2.4753e-02,  3.1827e-02])fc2.weighttensor([[ 0.0551, -0.1142,  0.0892,  0.1230, -0.0408, -0.0417,  0.0145,  0.0489,
          0.0763,  0.0192,  0.1042,  0.1029, -0.0045,  0.1062, -0.0303, -0.0309,
          0.0290, -0.0318,  0.1119,  0.0299,  0.0095, -0.0362,  0.0757,  0.1266,
          0.0789,  0.0921,  0.0492, -0.0706, -0.1022,  0.0610, -0.0801, -0.0663,
          0.0350,  0.0110, -0.1042, -0.0642, -0.1172, -0.0080,  0.1073, -0.0224,
         -0.0750, -0.0292, -0.0262,  0.0836, -0.0508, -0.1080, -0.0830, -0.0597,
          0.0840, -0.0381,  0.0990, -0.0470, -0.0936,  0.1294, -0.0758, -0.0277,
         -0.0770, -0.0548, -0.0309, -0.0643]])fc2.biastensor([-0.0213])

*********************************

subject 3
[2, 4, 6, 5, 0, 1, 3, 7]
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

randomizedorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.011793841219576558, 39229, 0.9683333333333334, 0.03131964342566062, 581, 48682, 1574, 19]


zero predicted positive indices
conv1.weighttensor([[[[nan, nan, nan],
          [nan, nan, nan],
          [nan, nan, nan]]]])conv1.biastensor([nan])conv2.weighttensor([[[[nan, nan, nan],
          [nan, nan, nan],
          [nan, nan, nan]]]])conv2.biastensor([nan])conv3.weighttensor([[[[nan, nan, nan],
          [nan, nan, nan],
          [nan, nan, nan]]]])conv3.biastensor([nan])conv4.weighttensor([[[[nan, nan, nan],
          [nan, nan, nan],
          [nan, nan, nan]]]])conv4.biastensor([nan])conv5.weighttensor([[[[nan, nan, nan],
          [nan, nan, nan],
          [nan, nan, nan]]]])conv5.biastensor([nan])fc1.weighttensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]])fc1.biastensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])fc2.weighttensor([[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]])fc2.biastensor([nan])

*********************************

subject 4
[2, 4, 6, 5, 0, 1, 3, 7]
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

zero predicted positive indices


randomizedorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.006989515726410384, 3083, 0.04666666666666667, 0.9265618077093487, 28, 3978, 50190, 572]
conv1.weighttensor([[[[-0.2927,  0.1570,  0.1117],
          [-0.1248,  0.1337,  0.0927],
          [-0.2125, -0.2657,  0.2453]]]])conv1.biastensor([0.3266])conv2.weighttensor([[[[ 0.2948, -0.0807, -0.3034],
          [-0.0629, -0.2206, -0.0425],
          [-0.0094,  0.2064,  0.3087]]]])conv2.biastensor([0.0375])conv3.weighttensor([[[[-0.2763,  0.0564,  0.0380],
          [ 0.0905, -0.1660, -0.2565],
          [-0.1332, -0.0606, -0.2637]]]])conv3.biastensor([0.2225])conv4.weighttensor([[[[-0.3186, -0.1164,  0.3131],
          [ 0.2501, -0.0208, -0.0119],
          [ 0.0264,  0.1652,  0.0587]]]])conv4.biastensor([-0.1419])conv5.weighttensor([[[[ 0.1680,  0.1812,  0.0668],
          [-0.1025,  0.2258,  0.0122],
          [ 0.1451, -0.1370, -0.1796]]]])conv5.biastensor([-0.2549])fc1.weighttensor([[ 0.0162,  0.0089,  0.0097,  ...,  0.0009, -0.0094,  0.0033],
        [-0.0014,  0.0005, -0.0321,  ..., -0.0274, -0.0177, -0.0215],
        [ 0.0020, -0.0239,  0.0301,  ...,  0.0081,  0.0352, -0.0205],
        ...,
        [-0.0252, -0.0145, -0.0217,  ..., -0.0303,  0.0221,  0.0143],
        [ 0.0341, -0.0215, -0.0124,  ..., -0.0238,  0.0260, -0.0025],
        [ 0.0198,  0.0324, -0.0354,  ..., -0.0288,  0.0171,  0.0261]])fc1.biastensor([ 0.0120,  0.0222, -0.0115, -0.0104,  0.0274,  0.0288,  0.0347,  0.0129,
         0.0053, -0.0212,  0.0357, -0.0341,  0.0190,  0.0164, -0.0283, -0.0141,
        -0.0273, -0.0160,  0.0168,  0.0228, -0.0126,  0.0064, -0.0299,  0.0305,
        -0.0056,  0.0094, -0.0143,  0.0091, -0.0336, -0.0239, -0.0125,  0.0214,
        -0.0355,  0.0296,  0.0269,  0.0261,  0.0039,  0.0316, -0.0368, -0.0162,
        -0.0328,  0.0184,  0.0154,  0.0006, -0.0229, -0.0009,  0.0143, -0.0187,
        -0.0357,  0.0036, -0.0083, -0.0374,  0.0315,  0.0039,  0.0249, -0.0054,
         0.0033, -0.0146, -0.0296,  0.0234])fc2.weighttensor([[ 0.0452,  0.1123,  0.1082, -0.0173,  0.0491, -0.0290,  0.1110,  0.0832,
          0.0974,  0.0764,  0.0591,  0.0231,  0.0835, -0.0499, -0.0858,  0.1075,
          0.0750,  0.0968,  0.0627, -0.1182, -0.1003,  0.0233,  0.0100, -0.0643,
         -0.0107, -0.0440, -0.1241,  0.0153,  0.1198,  0.1111,  0.0318,  0.0531,
         -0.0464,  0.0980, -0.0849, -0.0964,  0.0950,  0.0774,  0.0231, -0.0837,
          0.0237,  0.0829,  0.0650, -0.0089, -0.0556, -0.0987,  0.0497, -0.1185,
          0.0043, -0.0174, -0.1167,  0.0894,  0.0684,  0.0596,  0.0614, -0.0019,
         -0.0183,  0.0106, -0.0883,  0.0787]])fc2.biastensor([0.0129])

*********************************

subject 5
[2, 4, 6, 5, 0, 1, 3, 7]
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

randomizedorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.02271350696547547, 26151, 1.0, 0.010388316019473301, 600, 25816, 271, 0]


randomizedorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.023287405394915583, 23835, 1.0, 0.03534327442787595, 600, 25165, 922, 0]
conv1.weighttensor([[[[ 0.2872,  0.1312, -0.1625],
          [-0.2070, -0.1833, -0.2308],
          [-0.2692,  0.0673,  0.3122]]]])conv1.biastensor([0.0111])conv2.weighttensor([[[[-0.0167,  0.0612, -0.1285],
          [-0.0065, -0.1337,  0.2002],
          [ 0.2869, -0.2865,  0.0952]]]])conv2.biastensor([-0.0403])conv3.weighttensor([[[[-0.2370, -0.1822,  0.0589],
          [ 0.0680,  0.3052, -0.1597],
          [-0.2723,  0.0241,  0.2654]]]])conv3.biastensor([0.2500])conv4.weighttensor([[[[ 0.0232,  0.1831, -0.1845],
          [-0.0636, -0.1050,  0.2413],
          [ 0.3020, -0.0633,  0.0937]]]])conv4.biastensor([0.0163])conv5.weighttensor([[[[-0.3165, -0.2869,  0.0957],
          [-0.0974, -0.0279, -0.0090],
          [-0.3057, -0.0957, -0.1943]]]])conv5.biastensor([0.2683])fc1.weighttensor([[ 3.5156e-02,  1.4242e-02, -1.8429e-02,  ..., -2.6664e-02,
          2.0541e-02, -3.6222e-02],
        [-2.3549e-02, -2.6581e-02, -3.5312e-02,  ...,  3.1054e-02,
          2.8577e-02,  7.1845e-03],
        [ 1.4355e-03, -2.2876e-02,  1.5906e-02,  ...,  3.6968e-02,
         -1.3591e-02, -1.3422e-02],
        ...,
        [-9.2616e-03, -1.8339e-02,  1.1684e-02,  ...,  2.2853e-02,
         -1.9520e-02,  1.7519e-03],
        [ 9.7186e-03, -1.7921e-02,  2.4918e-02,  ...,  1.2360e-02,
         -5.5138e-03, -1.7448e-02],
        [ 2.8806e-03,  2.7974e-02,  4.9877e-03,  ...,  9.3595e-03,
          3.0414e-02, -8.9969e-05]])fc1.biastensor([-0.0350, -0.0325,  0.0211, -0.0187, -0.0061, -0.0226,  0.0191,  0.0120,
         0.0055, -0.0073, -0.0283, -0.0271,  0.0225, -0.0194,  0.0233,  0.0134,
        -0.0265,  0.0283, -0.0214, -0.0218, -0.0080,  0.0031, -0.0176,  0.0186,
         0.0028, -0.0057,  0.0368,  0.0357, -0.0219, -0.0297,  0.0082,  0.0337,
        -0.0064, -0.0362,  0.0145, -0.0369, -0.0086, -0.0077,  0.0020, -0.0054,
         0.0346, -0.0363, -0.0074,  0.0314,  0.0092, -0.0242,  0.0325, -0.0354,
        -0.0272,  0.0203,  0.0368,  0.0043,  0.0089,  0.0157, -0.0152, -0.0308,
        -0.0177,  0.0343, -0.0141,  0.0090])fc2.weighttensor([[-0.0011,  0.0750,  0.0368,  0.0500, -0.1084,  0.0818,  0.1262, -0.0275,
          0.0395,  0.0916,  0.0969, -0.0963, -0.0175, -0.0892, -0.1043, -0.0378,
          0.0434,  0.0353, -0.0843,  0.1036, -0.0181, -0.1128, -0.1209, -0.1253,
          0.0007,  0.0305,  0.1018, -0.0100, -0.0052, -0.0008,  0.0133, -0.1016,
          0.0326, -0.0703, -0.0989, -0.0602, -0.0295,  0.0767,  0.0915, -0.0556,
          0.0882,  0.0463,  0.0544, -0.0691,  0.1223,  0.0069,  0.0872, -0.1038,
          0.0215,  0.0815,  0.0816,  0.0848,  0.1103,  0.0291,  0.0780, -0.0215,
          0.1140, -0.0648, -0.0694,  0.0499]])fc2.biastensor([-0.0298])

*********************************

subject 6
[2, 4, 6, 5, 0, 1, 3, 7]
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

randomizedorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.02099370188943317, 28358, 1.0, 0.000928372491608941, 600, 27980, 26, 0]


randomizedorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.02050910050118702, 3236, 0.5183333333333333, 0.46964936085124614, 311, 14853, 13153, 289]
conv1.weighttensor([[[[-0.2763,  0.2059,  0.0963],
          [ 0.0407,  0.2994,  0.2178],
          [-0.0886, -0.0828,  0.2134]]]])conv1.biastensor([-0.1791])conv2.weighttensor([[[[ 0.1829, -0.0018, -0.1734],
          [ 0.2170, -0.0828,  0.1724],
          [ 0.2464, -0.0092,  0.2419]]]])conv2.biastensor([-0.3255])conv3.weighttensor([[[[ 0.0610, -0.2761, -0.1297],
          [-0.2997, -0.0397,  0.2637],
          [-0.2498, -0.3116,  0.2593]]]])conv3.biastensor([-0.1060])conv4.weighttensor([[[[-0.0771,  0.0386,  0.1265],
          [-0.2388, -0.0764,  0.3244],
          [ 0.0280,  0.0112,  0.2295]]]])conv4.biastensor([0.1240])conv5.weighttensor([[[[-0.2133,  0.2001,  0.3086],
          [-0.1168,  0.2209, -0.1333],
          [ 0.0292, -0.0572,  0.1039]]]])conv5.biastensor([0.2866])fc1.weighttensor([[ 0.0349,  0.0302,  0.0253,  ...,  0.0310, -0.0199, -0.0021],
        [-0.0080, -0.0026, -0.0052,  ..., -0.0196, -0.0303,  0.0371],
        [ 0.0305,  0.0174, -0.0085,  ..., -0.0145,  0.0100,  0.0164],
        ...,
        [ 0.0203,  0.0044, -0.0252,  ...,  0.0316, -0.0231, -0.0334],
        [ 0.0078,  0.0179,  0.0261,  ..., -0.0121, -0.0347, -0.0119],
        [-0.0339, -0.0041,  0.0370,  ...,  0.0013, -0.0064,  0.0100]])fc1.biastensor([ 7.0215e-03, -3.3512e-02,  3.1705e-02, -2.3642e-05, -9.8339e-03,
        -6.9597e-04, -1.8635e-03, -3.0739e-02, -1.3565e-02, -1.9427e-02,
         1.2675e-04,  2.4546e-02,  2.5283e-02,  1.9310e-02,  1.4140e-03,
        -1.5573e-02,  3.4319e-03,  3.6348e-02, -2.7565e-02, -9.6255e-03,
        -1.9662e-02, -1.1018e-02, -2.8071e-02, -1.9057e-02,  1.6657e-02,
        -1.5746e-03,  1.4570e-02,  1.8138e-02,  3.1392e-02, -2.4339e-02,
         2.9548e-02,  2.8105e-02,  1.4248e-02,  1.5750e-02,  1.6228e-02,
         1.9221e-02,  2.1049e-02, -7.0432e-03,  2.5763e-02, -1.7116e-02,
        -1.5997e-02, -2.4477e-02, -2.9716e-02,  2.6644e-03, -4.0839e-03,
        -7.9329e-04,  2.3973e-02, -2.7710e-02, -2.4451e-02,  1.4683e-02,
         2.0840e-02,  3.4624e-02,  2.1167e-02,  2.3062e-02, -3.6234e-02,
         1.7108e-02,  2.6643e-02,  9.5039e-04,  3.6690e-02,  2.3503e-02])fc2.weighttensor([[ 0.0163, -0.0091, -0.1233, -0.0495, -0.0158,  0.0923,  0.1028, -0.1140,
          0.1272, -0.0314, -0.0987, -0.0772,  0.0522, -0.1138,  0.0005,  0.0911,
          0.0831, -0.0561,  0.0750, -0.1157, -0.0107, -0.0756,  0.0922, -0.1170,
         -0.0901,  0.0348, -0.0182, -0.0206, -0.1068, -0.1257,  0.0502, -0.0305,
         -0.0104, -0.0996, -0.1228,  0.0673, -0.1142,  0.0452, -0.1233, -0.0866,
         -0.0130,  0.0491,  0.1071, -0.0507, -0.0594,  0.0933,  0.1096, -0.0061,
         -0.0900, -0.1100, -0.0190,  0.1258, -0.0990,  0.1004, -0.0409,  0.0031,
          0.0594,  0.1162,  0.0225,  0.0281]])fc2.biastensor([0.0543])

*********************************

subject 7
[2, 4, 6, 5, 0, 1, 3, 7]
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

randomizedorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.022846698652044778, 26126, 1.0, 0.009991898460707534, 600, 25662, 259, 0]


randomizedorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.023467292461132296, 7905, 0.8, 0.2294278770109178, 480, 19974, 5947, 120]
conv1.weighttensor([[[[ 0.2357, -0.0088,  0.1721],
          [ 0.0322,  0.0174,  0.1745],
          [-0.3032, -0.2700,  0.1293]]]])conv1.biastensor([-0.2582])conv2.weighttensor([[[[ 0.1010, -0.2908, -0.1172],
          [ 0.1647, -0.2617,  0.2433],
          [-0.1888, -0.0792, -0.1494]]]])conv2.biastensor([0.0264])conv3.weighttensor([[[[-0.0191,  0.2478, -0.0939],
          [-0.2397,  0.3010, -0.1868],
          [-0.0975, -0.1818,  0.1048]]]])conv3.biastensor([0.1867])conv4.weighttensor([[[[ 0.0087,  0.3206,  0.2742],
          [-0.2157, -0.0764, -0.0502],
          [ 0.3012,  0.2020,  0.0332]]]])conv4.biastensor([0.2350])conv5.weighttensor([[[[-0.2935, -0.2591,  0.3105],
          [ 0.2723, -0.3157,  0.0545],
          [-0.0199,  0.2066, -0.2035]]]])conv5.biastensor([-0.0795])fc1.weighttensor([[ 0.0329,  0.0332,  0.0314,  ...,  0.0344, -0.0151, -0.0234],
        [ 0.0098,  0.0295,  0.0156,  ...,  0.0029, -0.0228, -0.0165],
        [-0.0214, -0.0103, -0.0036,  ..., -0.0070, -0.0270, -0.0115],
        ...,
        [-0.0331, -0.0039,  0.0308,  ...,  0.0136, -0.0078,  0.0122],
        [ 0.0098, -0.0333, -0.0368,  ...,  0.0184, -0.0161, -0.0028],
        [ 0.0264, -0.0127, -0.0120,  ..., -0.0306,  0.0144, -0.0308]])fc1.biastensor([-0.0003, -0.0111,  0.0291,  0.0253, -0.0305,  0.0126,  0.0077, -0.0363,
        -0.0132,  0.0287,  0.0030,  0.0149,  0.0250, -0.0352,  0.0319, -0.0165,
         0.0140, -0.0004,  0.0101,  0.0322, -0.0278, -0.0358,  0.0130,  0.0137,
         0.0224,  0.0022, -0.0365,  0.0359,  0.0320, -0.0211,  0.0253,  0.0134,
         0.0223,  0.0041,  0.0355,  0.0055, -0.0223,  0.0351, -0.0192, -0.0361,
        -0.0273,  0.0320, -0.0058,  0.0304, -0.0344,  0.0188,  0.0272, -0.0120,
         0.0047,  0.0159,  0.0198, -0.0348, -0.0367, -0.0045,  0.0116,  0.0233,
        -0.0119, -0.0103,  0.0316, -0.0160])fc2.weighttensor([[-0.0918, -0.1248,  0.0246,  0.1126,  0.0768, -0.0595, -0.0670, -0.0001,
          0.0315, -0.0341, -0.0457, -0.0099, -0.1052, -0.0953, -0.0961,  0.0040,
         -0.0462, -0.0209, -0.1080,  0.1109,  0.1187, -0.0644,  0.0854, -0.0622,
         -0.0369,  0.0429,  0.0354, -0.0230,  0.0196,  0.0540, -0.0545, -0.0642,
         -0.0732, -0.0995, -0.0324,  0.0244, -0.0804,  0.0788,  0.0625, -0.0195,
          0.0909,  0.0657,  0.0722,  0.1142,  0.1019,  0.1141,  0.0100, -0.1151,
         -0.0029, -0.0732, -0.0844,  0.0737,  0.0031,  0.0087,  0.1125, -0.0427,
         -0.0140,  0.1176, -0.0112,  0.0891]])fc2.biastensor([-0.0243])

*********************************

subject 8
[2, 4, 6, 5, 0, 1, 3, 7]
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

randomizedorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.02371447768862891, 24843, 1.0, 0.01726675949870698, 600, 24701, 434, 0]


randomizedorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.02358247932576267, 18737, 0.9933333333333333, 0.01822160334195345, 596, 24677, 458, 4]
conv1.weighttensor([[[[ 0.0084,  0.2036, -0.2996],
          [-0.2351,  0.0089, -0.0864],
          [-0.0965,  0.0403,  0.2566]]]])conv1.biastensor([0.2791])conv2.weighttensor([[[[ 0.2115, -0.3530, -0.0764],
          [-0.3033,  0.1424,  0.2288],
          [ 0.0599, -0.3090, -0.0313]]]])conv2.biastensor([0.3275])conv3.weighttensor([[[[ 0.2109,  0.1227,  0.2113],
          [ 0.2190,  0.2246,  0.1797],
          [-0.2142,  0.2887, -0.2831]]]])conv3.biastensor([-0.3208])conv4.weighttensor([[[[-0.3037, -0.0373, -0.0821],
          [ 0.1486,  0.1578,  0.0208],
          [-0.2775,  0.1312, -0.1098]]]])conv4.biastensor([0.0912])conv5.weighttensor([[[[-0.0593,  0.2183,  0.0252],
          [ 0.0668,  0.0397, -0.2366],
          [-0.2709,  0.1948, -0.2183]]]])conv5.biastensor([0.0353])fc1.weighttensor([[-0.0060,  0.0090,  0.0341,  ..., -0.0146, -0.0265,  0.0315],
        [ 0.0319,  0.0314,  0.0171,  ...,  0.0224,  0.0197, -0.0240],
        [ 0.0133, -0.0090, -0.0213,  ..., -0.0282,  0.0159,  0.0268],
        ...,
        [-0.0187,  0.0199, -0.0082,  ...,  0.0057,  0.0101,  0.0271],
        [-0.0119,  0.0239,  0.0245,  ...,  0.0033, -0.0195,  0.0322],
        [-0.0075, -0.0315,  0.0305,  ...,  0.0217,  0.0262,  0.0207]])fc1.biastensor([ 0.0275, -0.0102, -0.0241, -0.0349, -0.0133, -0.0227, -0.0159,  0.0100,
        -0.0128,  0.0222,  0.0324, -0.0006, -0.0204,  0.0223,  0.0378, -0.0036,
        -0.0045,  0.0233, -0.0354, -0.0259,  0.0177, -0.0076,  0.0309,  0.0100,
         0.0014, -0.0248, -0.0355,  0.0154,  0.0249,  0.0096, -0.0307, -0.0303,
        -0.0120, -0.0026, -0.0160, -0.0239, -0.0016, -0.0184,  0.0083,  0.0230,
        -0.0067, -0.0363, -0.0131, -0.0256, -0.0024,  0.0250, -0.0065,  0.0133,
        -0.0247,  0.0338, -0.0234,  0.0179, -0.0018, -0.0173,  0.0073, -0.0133,
        -0.0331,  0.0106,  0.0140, -0.0174])fc2.weighttensor([[ 0.0861,  0.1209, -0.0948, -0.1247,  0.1080, -0.0685, -0.0467,  0.1111,
         -0.0564, -0.1158,  0.0103,  0.0599,  0.0687, -0.1281,  0.0315,  0.0215,
          0.0436,  0.1057,  0.0886, -0.0930, -0.0419, -0.1131, -0.1174, -0.0340,
          0.1138, -0.1172,  0.0417, -0.0608, -0.0278, -0.1208,  0.0935, -0.0335,
          0.0725, -0.1146,  0.1193,  0.0381, -0.0341,  0.0416, -0.0636, -0.1137,
          0.0962, -0.0485, -0.0837,  0.0387, -0.0936, -0.1079, -0.0238,  0.0705,
         -0.1081, -0.0089, -0.0011,  0.1035,  0.0500,  0.0286, -0.0301,  0.0767,
         -0.0352, -0.1079, -0.0129, -0.0741]])fc2.biastensor([0.0334])

*********************************

subject 9
[2, 4, 6, 5, 0, 1, 3, 7]
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

randomizedorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.023146362163413318, 25833, 1.0, 0.0, 600, 25322, 0, 0]


randomizedorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.023146362163413318, 25833, 1.0, 0.0, 600, 25322, 0, 0]
conv1.weighttensor([[[[-0.2021,  0.0721,  0.0026],
          [ 0.3322,  0.0558, -0.0577],
          [-0.0288,  0.0625,  0.1318]]]])conv1.biastensor([-0.1832])conv2.weighttensor([[[[-0.2691, -0.0959, -0.3047],
          [-0.0354, -0.0510, -0.1032],
          [-0.0349, -0.2620,  0.0510]]]])conv2.biastensor([-0.2088])conv3.weighttensor([[[[ 0.2645,  0.1852, -0.1594],
          [ 0.2522, -0.1124,  0.0130],
          [ 0.3193,  0.0997, -0.0200]]]])conv3.biastensor([0.1584])conv4.weighttensor([[[[ 0.2295,  0.3240,  0.2616],
          [ 0.0315,  0.2657, -0.2806],
          [-0.2387, -0.2861, -0.1077]]]])conv4.biastensor([0.1148])conv5.weighttensor([[[[-0.1611,  0.0254, -0.0264],
          [-0.2641, -0.2736,  0.2721],
          [ 0.2763, -0.3056, -0.2957]]]])conv5.biastensor([-0.0293])fc1.weighttensor([[ 0.0020, -0.0114, -0.0201,  ..., -0.0100,  0.0256,  0.0143],
        [ 0.0350, -0.0297,  0.0245,  ...,  0.0247,  0.0042, -0.0176],
        [ 0.0260,  0.0368, -0.0124,  ...,  0.0210,  0.0049,  0.0066],
        ...,
        [-0.0018, -0.0320,  0.0134,  ..., -0.0114,  0.0365,  0.0041],
        [ 0.0161,  0.0068, -0.0214,  ..., -0.0234,  0.0283, -0.0191],
        [-0.0097,  0.0071, -0.0027,  ..., -0.0171,  0.0128, -0.0047]])fc1.biastensor([-0.0342, -0.0013, -0.0278, -0.0103,  0.0008,  0.0204,  0.0049, -0.0154,
         0.0352,  0.0145, -0.0335,  0.0315, -0.0321, -0.0333,  0.0069, -0.0267,
         0.0165,  0.0287,  0.0360, -0.0051, -0.0086, -0.0355, -0.0049,  0.0036,
        -0.0338, -0.0298,  0.0082,  0.0277, -0.0293,  0.0125,  0.0217,  0.0040,
         0.0343,  0.0362, -0.0030, -0.0316,  0.0361,  0.0147, -0.0345,  0.0042,
         0.0248, -0.0191, -0.0192, -0.0332,  0.0305, -0.0004,  0.0030,  0.0032,
         0.0101,  0.0294, -0.0373, -0.0378, -0.0277, -0.0240,  0.0291,  0.0288,
        -0.0018,  0.0337, -0.0343,  0.0256])fc2.weighttensor([[ 0.0254, -0.1069,  0.0474,  0.0635,  0.0349, -0.0648, -0.0820,  0.0794,
         -0.0173,  0.1057,  0.0501, -0.0003, -0.0021,  0.1102,  0.0926,  0.0546,
         -0.0776, -0.0138,  0.1086,  0.0291,  0.1286, -0.1067,  0.0753,  0.0867,
          0.0357, -0.0538, -0.0891,  0.0795, -0.1033, -0.0347, -0.0524, -0.0053,
         -0.0589,  0.1193,  0.0568,  0.0840, -0.0460,  0.0799,  0.0653,  0.0329,
         -0.0684, -0.0879, -0.0274,  0.0115, -0.0671,  0.0384,  0.0878,  0.1191,
         -0.0508,  0.1174, -0.0489, -0.0759, -0.0187, -0.0270, -0.0763, -0.1210,
         -0.1108, -0.0356, -0.1156,  0.0933]])fc2.biastensor([-0.0374])