precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative, actualPositives



*********************************

subject 0
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

standardorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.004490274831896747, 21693, 0.6633333333333333, 0.34868168531695654, 199, 44119, 23619, 101]


zero predicted positive indices

conv1.weighttensor([[[[-0.1439,  0.2463, -0.1940],
          [ 0.2714, -0.1632, -0.2277],
          [ 0.0500,  0.1614,  0.2912]]]])conv1.biastensor([-0.0356])conv2.weighttensor([[[[-0.2297, -0.1204, -0.2210],
          [ 0.3220, -0.2078, -0.1711],
          [-0.2206,  0.3182,  0.3078]]]])conv2.biastensor([-0.1372])conv3.weighttensor([[[[ 0.1460,  0.2900,  0.0239],
          [ 0.0878, -0.3300,  0.1320],
          [-0.2526,  0.2195, -0.0740]]]])conv3.biastensor([-0.0575])conv4.weighttensor([[[[-0.1001,  0.0508, -0.2765],
          [ 0.1145,  0.1730, -0.1667],
          [-0.2029,  0.1792, -0.3288]]]])conv4.biastensor([-0.2627])conv5.weighttensor([[[[-0.2602, -0.1617,  0.2361],
          [-0.2162,  0.0620,  0.2904],
          [ 0.0429, -0.0174, -0.1264]]]])conv5.biastensor([0.2396])fc1.weighttensor([[ 0.0305, -0.0262, -0.0302,  ...,  0.0074,  0.0351,  0.0293],
        [ 0.0298,  0.0170, -0.0090,  ...,  0.0012,  0.0021, -0.0032],
        [ 0.0084,  0.0210, -0.0193,  ..., -0.0094, -0.0271,  0.0299],
        ...,
        [-0.0052,  0.0369, -0.0354,  ...,  0.0363, -0.0043,  0.0076],
        [ 0.0248, -0.0115, -0.0073,  ...,  0.0184, -0.0031, -0.0114],
        [-0.0057,  0.0188, -0.0234,  ..., -0.0157,  0.0197, -0.0368]])fc1.biastensor([ 2.6138e-02, -1.7060e-02, -7.4777e-03,  2.8015e-05, -1.6974e-02,
        -7.3104e-03, -3.3128e-02, -1.9991e-02, -4.0339e-02, -1.3336e-02,
         3.4379e-02, -3.1149e-02,  2.3946e-02,  2.4208e-02, -1.2657e-02,
        -2.5840e-03,  3.6173e-03,  3.6996e-02,  3.5488e-02, -2.7446e-02,
        -3.1683e-03,  3.5980e-02,  5.7675e-03,  2.4877e-02, -3.5446e-02,
        -1.4297e-02,  2.8747e-02, -1.5541e-02, -3.4770e-02,  1.7654e-02,
        -6.6046e-03,  1.6134e-03, -3.4211e-02, -2.1189e-03, -7.0168e-03,
         1.0650e-02,  2.7906e-02, -1.9238e-02, -3.3997e-02, -1.1648e-02,
         3.1292e-03, -3.0710e-02, -3.5386e-02, -3.1923e-02,  2.7214e-02,
        -3.8082e-02,  2.0026e-02, -3.2837e-04,  3.7195e-02,  3.0174e-02,
         6.2408e-03, -3.6599e-02,  2.3138e-02, -1.2573e-02,  8.6778e-03,
        -5.4075e-03, -1.0480e-02, -7.0685e-03,  1.9655e-02, -2.4320e-02])fc2.weighttensor([[ 0.0219,  0.0780,  0.1290,  0.0252, -0.0211, -0.0516, -0.0733, -0.0187,
         -0.0899, -0.0726,  0.0820, -0.0939, -0.0822, -0.0955,  0.0609,  0.0603,
         -0.0070, -0.0964, -0.0483,  0.0748, -0.1197,  0.0469,  0.0012, -0.0096,
          0.0557,  0.0594,  0.0763,  0.0749,  0.0252, -0.1021, -0.0881, -0.1012,
          0.0128,  0.1209,  0.0993,  0.1126,  0.0485,  0.0156, -0.0114,  0.0580,
         -0.0482, -0.0626, -0.0360, -0.0422,  0.0592, -0.0578,  0.1279,  0.0443,
          0.0773, -0.0910,  0.1220,  0.0627, -0.0086,  0.1130,  0.0676, -0.0257,
          0.0499,  0.0673, -0.0067,  0.1290]])fc2.biastensor([-0.0886])

*********************************

subject 1
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

standardorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.004527988368470246, 18728, 0.7266666666666667, 0.24560050369903982, 218, 47927, 15603, 82]


standardorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.0, 119, 0.0, 0.9901621281284433, 0, 625, 62905, 300]

conv1.weighttensor([[[[-0.0853,  0.2559, -0.2397],
          [ 0.2001,  0.2244,  0.0814],
          [-0.3101,  0.0838,  0.1815]]]])conv1.biastensor([-0.0230])conv2.weighttensor([[[[ 0.3213, -0.1334,  0.0774],
          [-0.1384,  0.1446,  0.0356],
          [ 0.0937, -0.1603, -0.0101]]]])conv2.biastensor([-0.0078])conv3.weighttensor([[[[-0.2101,  0.3278,  0.1314],
          [-0.0843,  0.3109,  0.0525],
          [-0.0724, -0.0939,  0.2929]]]])conv3.biastensor([0.3128])conv4.weighttensor([[[[ 0.0071, -0.3105,  0.2625],
          [ 0.2510, -0.2055,  0.0341],
          [ 0.0305, -0.2341,  0.1368]]]])conv4.biastensor([0.1365])conv5.weighttensor([[[[ 0.0722,  0.1088, -0.1181],
          [ 0.0404, -0.2406, -0.0625],
          [-0.3263, -0.3002, -0.0574]]]])conv5.biastensor([0.1222])fc1.weighttensor([[ 0.0154, -0.0312,  0.0363,  ..., -0.0130,  0.0091,  0.0202],
        [ 0.0011, -0.0157, -0.0361,  ...,  0.0001, -0.0032,  0.0353],
        [-0.0032, -0.0165, -0.0060,  ..., -0.0154,  0.0224, -0.0250],
        ...,
        [-0.0191,  0.0060,  0.0114,  ..., -0.0270, -0.0058,  0.0019],
        [-0.0116, -0.0147,  0.0075,  ...,  0.0208, -0.0251,  0.0290],
        [ 0.0293, -0.0073, -0.0344,  ...,  0.0088,  0.0246, -0.0286]])fc1.biastensor([-0.0228,  0.0204,  0.0325,  0.0251,  0.0237, -0.0012, -0.0313, -0.0030,
         0.0142, -0.0152, -0.0233, -0.0262, -0.0060,  0.0294,  0.0195,  0.0060,
         0.0176, -0.0369, -0.0294, -0.0210, -0.0115, -0.0300,  0.0338, -0.0124,
        -0.0323, -0.0357,  0.0157, -0.0242,  0.0013,  0.0166, -0.0362,  0.0198,
        -0.0345,  0.0269, -0.0361,  0.0269, -0.0171, -0.0088, -0.0175,  0.0286,
        -0.0310,  0.0130, -0.0144,  0.0028, -0.0053,  0.0242, -0.0009,  0.0008,
         0.0108, -0.0276,  0.0197, -0.0353, -0.0332,  0.0043, -0.0310, -0.0004,
         0.0060,  0.0299,  0.0148,  0.0014])fc2.weighttensor([[-0.0187,  0.0411,  0.0660,  0.0391, -0.0750, -0.0091,  0.0955,  0.1083,
          0.0142,  0.1037,  0.1087,  0.0708, -0.0520, -0.0873, -0.0112,  0.0449,
         -0.0124,  0.0120,  0.1196, -0.0691, -0.0202,  0.1259, -0.0781, -0.0535,
         -0.0340, -0.0905, -0.1279,  0.0189, -0.0522, -0.0920,  0.0332,  0.0865,
          0.0802,  0.0722, -0.0433, -0.0500,  0.1033, -0.0927,  0.1143,  0.0562,
          0.0684, -0.0504, -0.0815, -0.0619, -0.0060,  0.0591,  0.0028, -0.0108,
          0.0527, -0.0657,  0.0915,  0.0743, -0.1234, -0.1093, -0.0026,  0.1154,
         -0.0267,  0.0181, -0.1103,  0.0664]])fc2.biastensor([0.0048])

*********************************

subject 2

precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

standardorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.011366831345141985, 27425, 0.9433333333333334, 0.06449773858842309, 566, 49228, 3394, 34]


standardorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.01118263146410648, 8667, 0.3416666666666667, 0.6555243054235871, 205, 18127, 34495, 395]

conv1.weighttensor([[[[-0.1312, -0.2825,  0.0805],
          [-0.1123,  0.2560,  0.2271],
          [ 0.2317, -0.0344, -0.0861]]]])conv1.biastensor([-0.2229])conv2.weighttensor([[[[ 0.0419,  0.1709,  0.1502],
          [-0.1188,  0.1008,  0.2076],
          [-0.0765, -0.0024, -0.1128]]]])conv2.biastensor([-0.0876])conv3.weighttensor([[[[ 0.1883,  0.2163,  0.2167],
          [ 0.2304, -0.0141,  0.1673],
          [-0.2898, -0.0603,  0.0791]]]])conv3.biastensor([-0.3028])conv4.weighttensor([[[[ 0.2064,  0.1964,  0.2736],
          [ 0.2623,  0.0099,  0.1761],
          [-0.2979, -0.2706, -0.1367]]]])conv4.biastensor([-0.0652])conv5.weighttensor([[[[ 0.1434, -0.0650, -0.0452],
          [-0.1237, -0.3021, -0.2674],
          [ 0.1622,  0.1477,  0.2336]]]])conv5.biastensor([0.0316])fc1.weighttensor([[-0.0132, -0.0073,  0.0282,  ..., -0.0146,  0.0195,  0.0326],
        [ 0.0106, -0.0204, -0.0332,  ...,  0.0104,  0.0323, -0.0304],
        [ 0.0221, -0.0203,  0.0299,  ...,  0.0042,  0.0080,  0.0152],
        ...,
        [ 0.0185, -0.0137,  0.0319,  ..., -0.0323, -0.0289, -0.0215],
        [ 0.0310, -0.0005, -0.0006,  ..., -0.0251,  0.0139,  0.0297],
        [ 0.0326, -0.0151,  0.0160,  ...,  0.0288, -0.0110, -0.0235]])fc1.biastensor([-0.0036,  0.0067,  0.0163,  0.0282, -0.0162,  0.0346,  0.0129, -0.0123,
         0.0348,  0.0119, -0.0132,  0.0275, -0.0363, -0.0128,  0.0034,  0.0009,
         0.0349, -0.0149, -0.0331, -0.0044,  0.0201, -0.0075,  0.0119,  0.0004,
         0.0344, -0.0328, -0.0083,  0.0236, -0.0129,  0.0250,  0.0208, -0.0193,
        -0.0012, -0.0239, -0.0200, -0.0242, -0.0157, -0.0069, -0.0283, -0.0381,
        -0.0009,  0.0372, -0.0346, -0.0050, -0.0176, -0.0011, -0.0304, -0.0299,
         0.0265,  0.0332, -0.0045,  0.0185, -0.0223, -0.0318, -0.0027, -0.0134,
        -0.0263,  0.0237, -0.0080, -0.0378])fc2.weighttensor([[-0.1059,  0.0210, -0.0108, -0.0452,  0.0730,  0.0856,  0.0972, -0.1076,
          0.0571, -0.0371, -0.0329, -0.0370, -0.0286,  0.0385, -0.1060, -0.0928,
         -0.0101,  0.0594,  0.0712,  0.0756,  0.0680, -0.0538,  0.0678, -0.0488,
          0.0240, -0.0181,  0.1140, -0.0718,  0.0013, -0.0737, -0.0875,  0.1034,
         -0.0949, -0.0806, -0.0836,  0.0221,  0.0374, -0.1047,  0.0060, -0.0804,
         -0.0088,  0.0390, -0.0678, -0.0467,  0.0382, -0.1060, -0.0933,  0.0411,
          0.1326,  0.0866,  0.1088, -0.0664,  0.0853, -0.1067, -0.0373, -0.1088,
         -0.0233, -0.0445, -0.1122, -0.0435]])fc2.biastensor([0.0024])

*********************************

subject 3

precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

standardorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.011798017932987258, 50767, 1.0, 0.0, 600, 50256, 0, 0]


zero predicted positive indices


conv1.weighttensor([[[[  84.1648,   78.5556,   73.7472],
          [ 233.2120,  202.5833,  165.5832],
          [-317.4039, -289.8412, -238.8040]]]])conv1.biastensor([0.2453])conv2.weighttensor([[[[  -7.3193,   -9.0537,  -12.7973],
          [-171.7363, -188.2457, -155.6564],
          [ -12.2138,  -17.7990,  -16.8467]]]])conv2.biastensor([-0.2339])conv3.weighttensor([[[[  32.2722,   31.3269,   36.9701],
          [-106.7145, -137.5620, -151.6467],
          [-225.8114, -212.3637, -171.5783]]]])conv3.biastensor([-0.3037])conv4.weighttensor([[[[ -75.7769,  -91.0510,  -90.7412],
          [-255.4625, -263.2056, -228.3852],
          [-188.6115, -160.3316, -119.1733]]]])conv4.biastensor([-1.5881e+11])conv5.weighttensor([[[[nan, nan, nan],
          [nan, nan, nan],
          [nan, nan, nan]]]])conv5.biastensor([nan])fc1.weighttensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]])fc1.biastensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])fc2.weighttensor([[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]])fc2.biastensor([nan])

*********************************

subject 4

precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

zero predicted positive indices


zero predicted positive indices

conv1.weighttensor([[[[nan, nan, nan],
          [nan, nan, nan],
          [nan, nan, nan]]]])conv1.biastensor([nan])conv2.weighttensor([[[[nan, nan, nan],
          [nan, nan, nan],
          [nan, nan, nan]]]])conv2.biastensor([nan])conv3.weighttensor([[[[nan, nan, nan],
          [nan, nan, nan],
          [nan, nan, nan]]]])conv3.biastensor([nan])conv4.weighttensor([[[[nan, nan, nan],
          [nan, nan, nan],
          [nan, nan, nan]]]])conv4.biastensor([nan])conv5.weighttensor([[[[nan, nan, nan],
          [nan, nan, nan],
          [nan, nan, nan]]]])conv5.biastensor([nan])fc1.weighttensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]])fc1.biastensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])fc2.weighttensor([[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]])fc2.biastensor([nan])

*********************************

subject 5

precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

standardorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.02257930982576299, 26427, 1.0, 0.004369992716678805, 600, 25973, 114, 0]


standardorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.02265176683781335, 26386, 1.0, 0.007628320619465634, 600, 25888, 199, 0]


conv1.weighttensor([[[[ 0.3115, -0.0305, -0.1869],
          [-0.1132, -0.2224, -0.0832],
          [-0.1850,  0.2085, -0.2073]]]])conv1.biastensor([0.1175])conv2.weighttensor([[[[-0.0689,  0.2122,  0.2249],
          [ 0.0104,  0.1310,  0.2576],
          [ 0.1630, -0.2411,  0.2824]]]])conv2.biastensor([-0.2194])conv3.weighttensor([[[[-0.0675, -0.3100, -0.1808],
          [-0.1660,  0.0786, -0.1523],
          [ 0.0299,  0.1873, -0.1959]]]])conv3.biastensor([-0.1403])conv4.weighttensor([[[[-0.2907, -0.1703, -0.2589],
          [-0.2905,  0.0860, -0.1497],
          [ 0.2013, -0.0573, -0.3297]]]])conv4.biastensor([-0.1015])conv5.weighttensor([[[[-0.3203,  0.2845, -0.2690],
          [-0.2390, -0.0216,  0.2201],
          [ 0.1788, -0.1826, -0.2263]]]])conv5.biastensor([0.0902])fc1.weighttensor([[ 0.0259, -0.0055, -0.0213,  ..., -0.0237, -0.0330,  0.0072],
        [-0.0223, -0.0129, -0.0291,  ..., -0.0164,  0.0178,  0.0359],
        [ 0.0244, -0.0327,  0.0093,  ..., -0.0018,  0.0187,  0.0362],
        ...,
        [-0.0113, -0.0081,  0.0264,  ...,  0.0199,  0.0041, -0.0201],
        [-0.0246,  0.0309, -0.0059,  ..., -0.0309, -0.0046, -0.0171],
        [-0.0202, -0.0166,  0.0012,  ..., -0.0130, -0.0275, -0.0156]])fc1.biastensor([-0.0170,  0.0094,  0.0348, -0.0050, -0.0119,  0.0287,  0.0015, -0.0240,
         0.0174,  0.0256, -0.0082, -0.0180,  0.0031,  0.0358,  0.0014, -0.0343,
        -0.0197, -0.0126, -0.0078,  0.0106, -0.0347, -0.0240, -0.0069, -0.0285,
        -0.0173, -0.0366,  0.0158,  0.0114, -0.0051,  0.0260, -0.0306, -0.0324,
        -0.0366,  0.0353,  0.0073, -0.0306, -0.0237,  0.0111,  0.0337, -0.0013,
         0.0093, -0.0145, -0.0083,  0.0281, -0.0319,  0.0026,  0.0176, -0.0018,
         0.0377,  0.0189,  0.0280, -0.0335,  0.0168,  0.0179,  0.0260,  0.0242,
        -0.0134,  0.0248, -0.0060,  0.0038])fc2.weighttensor([[-0.0630, -0.1235, -0.0442,  0.1022, -0.1130, -0.1268,  0.0290,  0.0150,
         -0.0665,  0.0856, -0.1151,  0.0645, -0.0990,  0.1318, -0.0039, -0.0033,
          0.0405, -0.0499,  0.0798,  0.0687, -0.0006, -0.0576,  0.0076,  0.0386,
         -0.0936, -0.1095, -0.0475,  0.1142, -0.1247, -0.0290, -0.0095,  0.0296,
         -0.1192,  0.0284, -0.0464, -0.0069,  0.0766, -0.0625,  0.0145, -0.0003,
         -0.1244, -0.1110,  0.1278,  0.0891, -0.0639,  0.0997, -0.0188,  0.0788,
          0.0129, -0.1275,  0.0129,  0.0789,  0.0661, -0.0160, -0.0085, -0.1051,
         -0.0573,  0.0409,  0.0385, -0.0135]])fc2.biastensor([-0.0164])

*********************************

subject 6

precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

standardorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.021057803671077107, 28379, 1.0, 0.004034849675069628, 600, 27893, 113, 0]


standardorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.02097462070894218, 28517, 1.0, 0.0, 600, 28006, 0, 0]

conv1.weighttensor([[[[ 0.3235,  0.0863,  0.2117],
          [ 0.2503,  0.2883, -0.2944],
          [ 0.1518,  0.0497, -0.3193]]]])conv1.biastensor([0.0348])conv2.weighttensor([[[[-0.1856, -0.3142, -0.1989],
          [ 0.1556, -0.1663, -0.0505],
          [-0.1840,  0.0802, -0.2614]]]])conv2.biastensor([-0.0669])conv3.weighttensor([[[[-0.1798,  0.0400,  0.0446],
          [ 0.1391, -0.0451,  0.0947],
          [ 0.3156, -0.0566, -0.2865]]]])conv3.biastensor([-0.0973])conv4.weighttensor([[[[-0.0355, -0.2862, -0.2530],
          [-0.1660, -0.1183, -0.1364],
          [-0.3141, -0.0618,  0.2996]]]])conv4.biastensor([-0.3017])conv5.weighttensor([[[[-0.2978, -0.1491, -0.2198],
          [ 0.2011, -0.2386,  0.3228],
          [-0.3064, -0.0231,  0.1488]]]])conv5.biastensor([-0.2751])fc1.weighttensor([[-0.0090,  0.0336,  0.0156,  ..., -0.0003,  0.0237, -0.0075],
        [-0.0069, -0.0210, -0.0160,  ..., -0.0262, -0.0274,  0.0059],
        [ 0.0347,  0.0225, -0.0201,  ...,  0.0324, -0.0344, -0.0128],
        ...,
        [ 0.0246,  0.0240, -0.0088,  ...,  0.0210,  0.0076,  0.0317],
        [ 0.0313, -0.0146, -0.0063,  ..., -0.0127,  0.0224, -0.0206],
        [ 0.0096, -0.0171, -0.0001,  ..., -0.0325, -0.0116,  0.0218]])fc1.biastensor([-0.0267, -0.0203,  0.0075, -0.0089, -0.0153,  0.0013,  0.0010,  0.0109,
         0.0252,  0.0151, -0.0093, -0.0338,  0.0328,  0.0142,  0.0185,  0.0331,
         0.0017,  0.0076,  0.0343, -0.0271,  0.0348, -0.0134, -0.0073, -0.0273,
         0.0019,  0.0085, -0.0312, -0.0162,  0.0215, -0.0057, -0.0226,  0.0152,
        -0.0367,  0.0151,  0.0331,  0.0104, -0.0215, -0.0240,  0.0195,  0.0119,
        -0.0124, -0.0080, -0.0160,  0.0303, -0.0192,  0.0188,  0.0268,  0.0318,
         0.0200,  0.0236, -0.0294, -0.0024, -0.0141,  0.0119, -0.0371, -0.0254,
        -0.0150,  0.0366,  0.0251, -0.0008])fc2.weighttensor([[-0.0934,  0.1069,  0.0716, -0.0027,  0.0829, -0.0866,  0.0359,  0.0222,
         -0.0734, -0.1223, -0.1167, -0.0867,  0.0205,  0.0083,  0.1095,  0.0813,
         -0.0197, -0.0819,  0.0161,  0.0189, -0.0071,  0.0275, -0.0164, -0.1222,
         -0.0023, -0.0848, -0.0123, -0.0916, -0.0127, -0.0583, -0.0646, -0.0649,
          0.0724, -0.0128, -0.0578, -0.1168,  0.0805, -0.0681,  0.0068, -0.1275,
         -0.0957,  0.1011,  0.0365, -0.0904, -0.1043,  0.0326,  0.0743, -0.0349,
          0.1085, -0.0527, -0.0405, -0.0510, -0.1041,  0.0812,  0.1030,  0.0778,
          0.0789,  0.1006, -0.0087, -0.0898]])fc2.biastensor([0.0390])

*********************************

subject 7

precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

standardorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.022800684020520615, 26175, 1.0, 0.007947224258323367, 600, 25715, 206, 0]


zero predicted positive indices


conv1.weighttensor([[[[ 0.0960, -0.2309,  0.1849],
          [ 0.0174, -0.2592,  0.0755],
          [ 0.2986,  0.2263, -0.0805]]]])conv1.biastensor([-0.2934])conv2.weighttensor([[[[-0.2528, -0.3090,  0.0495],
          [ 0.1855, -0.2273, -0.2224],
          [-0.2491,  0.1301, -0.2787]]]])conv2.biastensor([-0.3095])conv3.weighttensor([[[[ 0.2463,  0.1064,  0.2671],
          [-0.1573,  0.1265,  0.2259],
          [ 0.1584, -0.1635, -0.2925]]]])conv3.biastensor([-0.1792])conv4.weighttensor([[[[-0.2206,  0.2487,  0.2095],
          [-0.1402,  0.0994, -0.2721],
          [ 0.1667,  0.0446, -0.0776]]]])conv4.biastensor([0.0590])conv5.weighttensor([[[[ 0.0697, -0.2320,  0.0396],
          [-0.0597,  0.2331, -0.2431],
          [ 0.3132, -0.2775, -0.0902]]]])conv5.biastensor([0.2719])fc1.weighttensor([[ 0.0076, -0.0030, -0.0133,  ..., -0.0109, -0.0145, -0.0103],
        [-0.0099, -0.0256, -0.0060,  ..., -0.0053,  0.0086,  0.0305],
        [-0.0258, -0.0110,  0.0315,  ..., -0.0112, -0.0216,  0.0312],
        ...,
        [-0.0056, -0.0322,  0.0155,  ...,  0.0139, -0.0354,  0.0097],
        [-0.0349,  0.0316, -0.0238,  ...,  0.0104, -0.0151,  0.0168],
        [-0.0224, -0.0364,  0.0142,  ..., -0.0162,  0.0231,  0.0029]])fc1.biastensor([-0.0082,  0.0072,  0.0041,  0.0229, -0.0225, -0.0182, -0.0284, -0.0221,
         0.0225, -0.0087,  0.0065,  0.0119, -0.0207,  0.0205, -0.0213, -0.0056,
         0.0163,  0.0311,  0.0045, -0.0078, -0.0242, -0.0297, -0.0296, -0.0297,
        -0.0088,  0.0353,  0.0198,  0.0202, -0.0310, -0.0256,  0.0229, -0.0277,
        -0.0266,  0.0373, -0.0270, -0.0034,  0.0015, -0.0321,  0.0223,  0.0094,
         0.0200, -0.0266, -0.0007, -0.0167, -0.0248,  0.0084, -0.0175, -0.0166,
         0.0211,  0.0311, -0.0360,  0.0087,  0.0259, -0.0042, -0.0317, -0.0117,
         0.0198, -0.0021, -0.0023,  0.0121])fc2.weighttensor([[-0.0612, -0.0519, -0.0800,  0.0767,  0.0950, -0.0934, -0.0609, -0.1036,
         -0.0922,  0.0428,  0.1029, -0.0802,  0.0782, -0.0154, -0.0131, -0.0421,
          0.0513, -0.0103,  0.0559, -0.0072,  0.1258, -0.0565, -0.0965, -0.0246,
         -0.1141,  0.1080,  0.0468,  0.0121, -0.0148, -0.1053,  0.0372,  0.0731,
          0.0167, -0.1097, -0.0829,  0.0546, -0.0759, -0.0205, -0.1225,  0.0874,
          0.0435, -0.0775,  0.0324, -0.0796, -0.0099, -0.0144,  0.0982, -0.0569,
         -0.1113,  0.1006, -0.1124, -0.0068,  0.0459,  0.1223, -0.0531, -0.0616,
          0.1236,  0.0476, -0.0440,  0.0341]])fc2.biastensor([-0.0223])

*********************************

subject 8

precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

standardorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.023701362828362632, 25166, 1.0, 0.01670976725681321, 600, 24715, 420, 0]


standardorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.0, 1276, 0.0, 0.9503481201511836, 0, 1248, 23887, 600]


conv1.weighttensor([[[[-0.1994,  0.1924,  0.0597],
          [ 0.0544,  0.0656,  0.0274],
          [-0.2602, -0.0375,  0.0317]]]])conv1.biastensor([-0.2054])conv2.weighttensor([[[[ 0.0298,  0.0397,  0.0376],
          [-0.3360, -0.2451, -0.0354],
          [ 0.0445,  0.1308, -0.1688]]]])conv2.biastensor([-0.1403])conv3.weighttensor([[[[-0.1328, -0.0682,  0.0706],
          [-0.3229,  0.1414, -0.0019],
          [ 0.0150,  0.2636,  0.0829]]]])conv3.biastensor([-0.1733])conv4.weighttensor([[[[-0.3697, -0.1020, -0.1415],
          [-0.0384, -0.1289, -0.1086],
          [-0.2174,  0.0365, -0.4593]]]])conv4.biastensor([0.2383])conv5.weighttensor([[[[ 0.0600, -0.1389, -0.0776],
          [ 0.1078,  0.0281,  0.2993],
          [-0.0374,  0.1245, -0.2587]]]])conv5.biastensor([-0.0039])fc1.weighttensor([[-0.0074,  0.0217,  0.0221,  ...,  0.0119,  0.0208, -0.0152],
        [-0.0367,  0.0096, -0.0291,  ..., -0.0327,  0.0303, -0.0327],
        [-0.0307,  0.0115,  0.0202,  ...,  0.0026,  0.0342, -0.0209],
        ...,
        [ 0.0087,  0.0242, -0.0041,  ..., -0.0164,  0.0287, -0.0299],
        [-0.0104,  0.0162,  0.0241,  ...,  0.0091,  0.0102, -0.0050],
        [-0.0320,  0.0083,  0.0239,  ..., -0.0343,  0.0044, -0.0254]])fc1.biastensor([-0.0032,  0.0135,  0.0103, -0.0290, -0.0258, -0.0044, -0.0141, -0.0113,
        -0.0235,  0.0022,  0.0290,  0.0006, -0.0179,  0.0039,  0.0208, -0.0029,
        -0.0302, -0.0270, -0.0002, -0.0249,  0.0188, -0.0018, -0.0098,  0.0012,
         0.0023,  0.0360, -0.0070, -0.0099,  0.0346, -0.0102, -0.0038, -0.0113,
         0.0180,  0.0042,  0.0139, -0.0232,  0.0055,  0.0127, -0.0033, -0.0095,
        -0.0040, -0.0370, -0.0108, -0.0163,  0.0233, -0.0267,  0.0003,  0.0098,
         0.0255, -0.0007,  0.0069,  0.0073,  0.0095, -0.0272,  0.0189, -0.0314,
        -0.0014, -0.0035,  0.0339, -0.0113])fc2.weighttensor([[-0.0036, -0.0822,  0.0954, -0.0532, -0.0881,  0.1025, -0.0195,  0.1018,
         -0.0559, -0.0146, -0.0367, -0.0715, -0.0271,  0.0535,  0.1125, -0.0207,
          0.0753,  0.0825, -0.0624,  0.0532,  0.0368,  0.0678,  0.0188, -0.0611,
          0.0092, -0.0362, -0.0078,  0.0930,  0.0939, -0.0608, -0.0703, -0.0848,
          0.1088, -0.0716, -0.0715, -0.0713,  0.0033,  0.0123, -0.1160, -0.0600,
         -0.0116,  0.0004,  0.0566,  0.0310,  0.0668, -0.0519, -0.0317, -0.0825,
          0.1102,  0.1097, -0.0733, -0.1031,  0.0158, -0.0581, -0.0018, -0.1026,
          0.0632,  0.0361, -0.0712,  0.1212]])fc2.biastensor([0.0821])

*********************************

subject 9

precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

standardorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.02334539512081242, 25581, 1.0, 0.00872758865808388, 600, 25101, 221, 0]


standardorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.02352848907885965, 25085, 1.0, 0.01662585893689282, 600, 24901, 421, 0]


conv1.weighttensor([[[[-0.1342, -0.1698,  0.0464],
          [-0.1685, -0.0354,  0.0456],
          [-0.2486, -0.3283, -0.1334]]]])conv1.biastensor([-0.1767])conv2.weighttensor([[[[ 0.2325, -0.1273, -0.0644],
          [-0.2491,  0.1861,  0.1875],
          [-0.2600,  0.2547,  0.1217]]]])conv2.biastensor([-0.1355])conv3.weighttensor([[[[-0.0223,  0.2368,  0.2671],
          [ 0.1430, -0.0804, -0.1147],
          [-0.2377,  0.1066, -0.0300]]]])conv3.biastensor([0.0474])conv4.weighttensor([[[[-0.1697, -0.0940,  0.1729],
          [ 0.2149, -0.2999,  0.2054],
          [-0.1026,  0.1819, -0.1467]]]])conv4.biastensor([-0.2230])conv5.weighttensor([[[[-0.0131,  0.3223, -0.1968],
          [ 0.1945,  0.1393,  0.0563],
          [-0.2875, -0.2130,  0.0719]]]])conv5.biastensor([-0.0840])fc1.weighttensor([[ 0.0263,  0.0098, -0.0166,  ..., -0.0349,  0.0269, -0.0104],
        [-0.0020, -0.0293,  0.0338,  ...,  0.0084, -0.0309,  0.0153],
        [ 0.0295, -0.0081, -0.0033,  ...,  0.0367,  0.0198, -0.0012],
        ...,
        [-0.0096,  0.0060,  0.0329,  ...,  0.0137, -0.0155,  0.0082],
        [ 0.0040, -0.0267,  0.0016,  ...,  0.0181, -0.0072,  0.0103],
        [-0.0206, -0.0302,  0.0150,  ..., -0.0194, -0.0139, -0.0211]])fc1.biastensor([ 8.6115e-03, -2.7657e-02,  3.2547e-02,  2.6107e-02,  2.6354e-02,
         4.7867e-03, -1.0374e-02, -1.6917e-03, -9.5680e-03,  1.7311e-02,
        -1.0815e-02,  1.0473e-03,  1.8590e-02,  8.8858e-03, -2.7947e-04,
        -2.7615e-02, -3.2712e-02,  7.0494e-03,  1.5127e-02, -2.8263e-02,
         7.8041e-03, -1.0010e-03, -4.9662e-03,  3.0039e-02,  1.6160e-02,
        -2.1680e-02,  1.9271e-02, -3.4359e-02,  2.8900e-02,  3.7617e-04,
        -4.1738e-03,  1.6067e-05,  5.7456e-03, -2.5126e-03, -1.0881e-02,
         2.5545e-02,  1.8431e-02, -1.1652e-02,  2.4782e-02,  3.3338e-03,
        -1.8961e-02, -3.2663e-02,  3.4954e-02,  3.4884e-02, -2.4975e-02,
        -7.8747e-03,  1.3801e-02,  1.1505e-03, -3.3588e-02, -2.5218e-02,
        -1.4144e-02,  1.9473e-02, -2.1081e-02, -1.8057e-02,  3.7993e-03,
         1.9192e-02,  3.2139e-02, -1.4913e-03,  2.4350e-02, -2.0622e-02])fc2.weighttensor([[ 0.0240,  0.0682, -0.0423,  0.0450,  0.0488, -0.0937,  0.1161,  0.0020,
         -0.1099,  0.0376, -0.0047, -0.0334, -0.0840,  0.0858,  0.0604,  0.0255,
          0.0420,  0.0910, -0.0081, -0.0903, -0.1198,  0.0560,  0.0850,  0.0574,
          0.0204,  0.0877,  0.0399,  0.0853, -0.0697,  0.0816, -0.0105, -0.0909,
         -0.0492,  0.1184,  0.0647,  0.1027,  0.0378, -0.1062, -0.0079, -0.1132,
          0.0840, -0.0754, -0.0033,  0.0396, -0.0296, -0.0700,  0.1005,  0.0491,
          0.0474, -0.0932,  0.0153, -0.0222, -0.1015,  0.1035, -0.0673,  0.0261,
         -0.1140, -0.0196, -0.0336,  0.0299]])fc2.biastensor([0.0004])