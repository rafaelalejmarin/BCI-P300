precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative, actualPositives



*********************************

subject 0
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

standardorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.004418912947414936, 66881, 1.0, 0.002184888836399067, 300, 67590, 148, 0]


zero predicted positive indices
conv1.weighttensor([[[[ 0.1833,  0.1481,  0.2815],
          [-0.0761, -0.1238, -0.2975],
          [-0.2330, -0.2069,  0.2288]]]])conv1.biastensor([0.1601])conv2.weighttensor([[[[-0.0627, -0.3220,  0.0615],
          [-0.1662, -0.2145,  0.2065],
          [ 0.2638, -0.1902, -0.2749]]]])conv2.biastensor([-0.3330])conv3.weighttensor([[[[ 0.2975,  0.2038, -0.2421],
          [ 0.3118, -0.2111, -0.0171],
          [ 0.1640,  0.1106, -0.1518]]]])conv3.biastensor([-0.1501])conv4.weighttensor([[[[ 0.2331, -0.2756, -0.0846],
          [ 0.0626,  0.1683,  0.2196],
          [-0.1082,  0.0547, -0.0395]]]])conv4.biastensor([-0.0634])conv5.weighttensor([[[[-4.2532e-02,  1.8492e-05,  7.5564e-04],
          [ 2.4724e-01, -1.8080e-01, -2.2464e-01],
          [-9.0039e-03,  1.2020e-01,  1.5917e-01]]]])conv5.biastensor([0.1454])fc1.weighttensor([[ 0.0052, -0.0256,  0.0007,  ..., -0.0268,  0.0064,  0.0331],
        [ 0.0043, -0.0230,  0.0176,  ...,  0.0248,  0.0271, -0.0215],
        [-0.0357, -0.0129, -0.0237,  ..., -0.0121,  0.0161,  0.0310],
        ...,
        [ 0.0099, -0.0258, -0.0016,  ...,  0.0296,  0.0056,  0.0122],
        [-0.0063, -0.0359, -0.0336,  ...,  0.0231, -0.0135,  0.0253],
        [-0.0195,  0.0359, -0.0163,  ..., -0.0047,  0.0198,  0.0100]])fc1.biastensor([-2.5085e-02, -3.2130e-02, -1.1242e-02,  8.1902e-03, -6.4403e-03,
        -1.9959e-02, -1.2314e-02,  2.6138e-02, -3.2931e-02, -3.1372e-02,
         3.1665e-02, -2.3359e-02,  2.6693e-02,  1.0462e-02, -4.3139e-03,
        -2.5342e-02,  8.8981e-03, -3.6198e-02,  3.7160e-03, -1.9185e-02,
         1.0494e-02, -2.6601e-02,  3.5176e-03, -1.2001e-02,  2.3536e-02,
        -1.7870e-02,  2.2908e-02,  3.4536e-02,  1.4903e-02,  1.1256e-02,
         1.7256e-02,  1.5246e-03, -9.0356e-03,  2.7453e-02,  1.3095e-02,
        -4.3880e-03,  1.7322e-02, -1.4660e-02, -1.8685e-02, -1.2099e-02,
        -2.1246e-02,  3.6330e-02,  2.9215e-02,  2.6772e-03,  2.8379e-03,
        -2.3365e-02,  1.6778e-02,  1.3599e-02, -3.5864e-03,  1.0128e-02,
         9.9600e-03, -3.5210e-02,  6.3210e-05, -3.4097e-02,  1.0693e-02,
         1.2793e-03, -2.2488e-03,  4.6929e-03,  1.3142e-03, -1.0558e-02])fc2.weighttensor([[ 0.1176,  0.0386, -0.0938, -0.0462, -0.0655, -0.1195, -0.0398, -0.1038,
          0.0381,  0.0374, -0.0082,  0.0411, -0.0576,  0.0396, -0.0650,  0.0321,
          0.0224, -0.1004, -0.0913, -0.1256, -0.0583, -0.0848, -0.0141,  0.0502,
          0.0797,  0.0523, -0.0293, -0.0860,  0.1170, -0.0233,  0.0191,  0.1239,
         -0.0308, -0.1280,  0.1275,  0.0474, -0.0193,  0.0871, -0.1276,  0.1019,
         -0.0741, -0.1288, -0.0221, -0.0373, -0.0798,  0.0039,  0.0853,  0.0727,
          0.0236, -0.0668, -0.1048, -0.0985,  0.0846,  0.0462, -0.1078,  0.0791,
         -0.0943,  0.0758,  0.0540, -0.0988]])fc2.biastensor([-0.0633])

*********************************

subject 1
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

standardorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.0, 36, 0.0, 0.9968046592161184, 0, 203, 63327, 300]


standardorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.004706177642518746, 61549, 1.0, 0.0013222099795372265, 300, 63446, 84, 0]
conv1.weighttensor([[[[-0.1989, -0.2818, -0.2768],
          [-0.0613, -0.0224, -0.1023],
          [ 0.2437, -0.0113,  0.1728]]]])conv1.biastensor([0.1770])conv2.weighttensor([[[[-0.0435,  0.3173,  0.2241],
          [-0.2141, -0.0381, -0.1929],
          [-0.2353,  0.2736,  0.3077]]]])conv2.biastensor([0.1677])conv3.weighttensor([[[[ 0.0555, -0.2130, -0.1997],
          [ 0.1379,  0.3139, -0.1203],
          [ 0.3076,  0.1720, -0.1310]]]])conv3.biastensor([-0.2167])conv4.weighttensor([[[[-0.2822,  0.2378, -0.2541],
          [-0.0176, -0.1828,  0.1646],
          [-0.1651, -0.0107, -0.0417]]]])conv4.biastensor([0.0724])conv5.weighttensor([[[[-0.1770, -0.2552, -0.2749],
          [ 0.2754, -0.2233,  0.1158],
          [ 0.2933,  0.1593, -0.2161]]]])conv5.biastensor([-0.0029])fc1.weighttensor([[-0.0235,  0.0105,  0.0179,  ...,  0.0031,  0.0199, -0.0086],
        [ 0.0238, -0.0121, -0.0357,  ..., -0.0022, -0.0314,  0.0274],
        [-0.0362, -0.0314,  0.0179,  ...,  0.0232, -0.0307,  0.0118],
        ...,
        [-0.0070, -0.0207, -0.0329,  ...,  0.0307, -0.0327,  0.0213],
        [ 0.0296, -0.0157, -0.0105,  ..., -0.0364,  0.0063, -0.0243],
        [ 0.0308,  0.0232,  0.0220,  ...,  0.0200, -0.0370, -0.0019]])fc1.biastensor([-0.0302, -0.0118,  0.0226,  0.0224, -0.0088,  0.0032,  0.0260, -0.0031,
        -0.0172,  0.0319,  0.0311,  0.0341,  0.0333,  0.0026,  0.0367, -0.0312,
         0.0252, -0.0105, -0.0213,  0.0011, -0.0339, -0.0351, -0.0018,  0.0178,
        -0.0204, -0.0356,  0.0320, -0.0367,  0.0011, -0.0238,  0.0147,  0.0033,
        -0.0049,  0.0307,  0.0005,  0.0099,  0.0361,  0.0129, -0.0216, -0.0355,
        -0.0360,  0.0330, -0.0237, -0.0268, -0.0300,  0.0348, -0.0315, -0.0308,
         0.0293, -0.0087,  0.0212,  0.0004, -0.0150,  0.0351, -0.0015,  0.0294,
         0.0247, -0.0128,  0.0155, -0.0187])fc2.weighttensor([[-0.0103, -0.0228,  0.0603,  0.1190, -0.0230, -0.0501, -0.0537,  0.0053,
          0.0316,  0.0011, -0.1046, -0.0939,  0.0407, -0.0959, -0.0967, -0.1025,
          0.0139, -0.0492,  0.0864, -0.0563,  0.1165, -0.0771, -0.0743,  0.1098,
          0.0974, -0.0891,  0.0447,  0.0535, -0.0446, -0.0937,  0.0992, -0.1005,
         -0.0065,  0.0504,  0.0915,  0.0171,  0.0384, -0.0047,  0.1279,  0.0566,
          0.0106,  0.1085, -0.0598,  0.0796,  0.1009, -0.0589, -0.0049,  0.0757,
          0.0390,  0.1058,  0.0997,  0.0579,  0.0666, -0.0847,  0.0356,  0.0006,
         -0.0016, -0.0432,  0.1224,  0.1271]])fc2.biastensor([0.0237])

*********************************

subject 2
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

standardorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.011291354586171854, 53133, 1.0, 0.0015962905248755274, 600, 52538, 84, 0]


standardorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.0, 3, 0.0, 0.9996009273687811, 0, 21, 52601, 600]
conv1.weighttensor([[[[-0.1585, -0.1050, -0.3188],
          [-0.1850, -0.3226, -0.2361],
          [ 0.1409, -0.2600,  0.2007]]]])conv1.biastensor([0.1064])conv2.weighttensor([[[[ 0.1896, -0.0237,  0.0598],
          [ 0.1457,  0.1193, -0.1230],
          [-0.2904, -0.1262, -0.0056]]]])conv2.biastensor([-0.1917])conv3.weighttensor([[[[ 0.1329, -0.2542, -0.3216],
          [ 0.1012,  0.0443,  0.2814],
          [-0.1285,  0.0315, -0.2288]]]])conv3.biastensor([-0.1042])conv4.weighttensor([[[[ 0.1083, -0.0822, -0.0807],
          [-0.2289,  0.0353,  0.1492],
          [-0.0320, -0.2031,  0.1101]]]])conv4.biastensor([0.1184])conv5.weighttensor([[[[-0.1455, -0.0192,  0.2212],
          [ 0.2887, -0.0766, -0.2699],
          [ 0.1459, -0.2673,  0.2515]]]])conv5.biastensor([0.2183])fc1.weighttensor([[-0.0344,  0.0123, -0.0117,  ...,  0.0216,  0.0138,  0.0264],
        [ 0.0010,  0.0109,  0.0161,  ...,  0.0367, -0.0302, -0.0110],
        [ 0.0005,  0.0201, -0.0113,  ..., -0.0084, -0.0248, -0.0333],
        ...,
        [ 0.0166,  0.0135,  0.0240,  ..., -0.0052,  0.0211, -0.0078],
        [-0.0224,  0.0224, -0.0296,  ..., -0.0197,  0.0097,  0.0370],
        [-0.0063, -0.0114,  0.0333,  ...,  0.0203,  0.0153,  0.0198]])fc1.biastensor([-1.1824e-02,  1.6385e-02, -3.4770e-02,  2.3017e-02, -3.0710e-02,
         3.2114e-02, -1.7963e-02,  2.5251e-02,  2.4231e-02, -1.8846e-02,
        -5.7588e-03,  1.0701e-02, -3.3576e-02,  3.1513e-02,  2.0065e-02,
         3.4707e-02,  1.0993e-02, -3.4542e-02,  2.7135e-02, -1.2635e-02,
         1.1353e-02, -1.7770e-02, -9.1057e-03,  1.7954e-02,  3.7289e-04,
         2.4868e-02,  2.9468e-03,  3.7084e-02,  1.4852e-02, -1.6652e-02,
         3.1880e-02, -2.9487e-02, -1.0961e-02,  7.9884e-03, -2.6581e-02,
        -2.6605e-02,  1.0699e-02, -2.8942e-02, -7.9536e-03,  2.4121e-02,
        -6.9740e-05, -1.4657e-02,  1.6488e-02, -3.6390e-02, -2.5327e-02,
         1.9651e-02, -1.6879e-02,  1.2845e-02, -2.1652e-02, -3.7344e-02,
         3.2228e-04, -2.8726e-02,  2.9018e-02, -3.6578e-03,  1.5905e-02,
         2.4601e-02, -3.3577e-02,  7.3376e-03, -2.2721e-02, -3.4792e-02])fc2.weighttensor([[ 0.0499, -0.0608,  0.0547, -0.0435, -0.1236,  0.0357,  0.0827,  0.0728,
         -0.0105,  0.1173,  0.0106, -0.0885, -0.0060, -0.0701, -0.0272,  0.0051,
          0.0121, -0.0919,  0.0231, -0.0595,  0.1071,  0.0736,  0.0393,  0.0407,
          0.1272, -0.0499,  0.1078,  0.0433,  0.0207, -0.0539,  0.0102, -0.0150,
         -0.0055, -0.0686, -0.1238,  0.1045,  0.0717,  0.0097, -0.0077, -0.0271,
         -0.0400, -0.1012, -0.0594,  0.1275, -0.1136, -0.0740, -0.0021,  0.0429,
          0.0153,  0.0706, -0.0402, -0.0054,  0.0111,  0.0719, -0.0297, -0.0663,
          0.0194, -0.0312, -0.0468,  0.0658]])fc2.biastensor([0.0596])

*********************************

subject 3
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

zero predicted positive indices


zero predicted positive indices
conv1.weighttensor([[[[ 43.6794,  50.9600,  26.9777],
          [ 66.0346, 116.5130, 108.5515],
          [ -4.8206,   4.9368, -18.3261]]]])conv1.biastensor([0.2221])conv2.weighttensor([[[[  -6.7152,  -16.5183,  -26.9455],
          [ -55.6645,  -17.2719,  -44.7258],
          [ -54.9235, -115.2857,  -65.8506]]]])conv2.biastensor([-0.0128])conv3.weighttensor([[[[ -73.7946,  -35.1186,  -10.0441],
          [-166.0743, -154.9129, -123.6376],
          [-163.7240, -164.0173, -200.7148]]]])conv3.biastensor([-0.2028])conv4.weighttensor([[[[ -44.4679,  -29.2417,  -44.2911],
          [ -84.5728,  -86.5585, -106.8694],
          [ -29.6296,  -42.9402,  -94.6109]]]])conv4.biastensor([-0.0458])conv5.weighttensor([[[[nan, nan, nan],
          [nan, nan, nan],
          [nan, nan, nan]]]])conv5.biastensor([nan])fc1.weighttensor([[nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        ...,
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan],
        [nan, nan, nan,  ..., nan, nan, nan]])fc1.biastensor([nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
        nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan])fc2.weighttensor([[nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan,
         nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan, nan]])fc2.biastensor([nan])

*********************************

subject 4
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

zero predicted positive indices


standardorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.011117493375826864, 53884, 1.0, 0.014750406143848767, 600, 53369, 799, 0]
conv1.weighttensor([[[[-0.2579, -0.3168, -0.1001],
          [ 0.1765,  0.2801, -0.3434],
          [-0.1287, -0.0379,  0.3071]]]])conv1.biastensor([0.2247])conv2.weighttensor([[[[ 0.0464, -0.1636, -0.2753],
          [ 0.3049,  0.1994, -0.1893],
          [ 0.2949,  0.1613,  0.0652]]]])conv2.biastensor([-0.0122])conv3.weighttensor([[[[ 0.0225,  0.0961, -0.0151],
          [-0.2206, -0.2870, -0.1488],
          [ 0.0584, -0.2866, -0.2102]]]])conv3.biastensor([-0.2253])conv4.weighttensor([[[[-0.0896, -0.1236,  0.0027],
          [-0.0946,  0.0078, -0.0565],
          [ 0.0283, -0.3244, -0.0531]]]])conv4.biastensor([-0.1442])conv5.weighttensor([[[[-0.2482, -0.0026, -0.2838],
          [ 0.2688,  0.2121, -0.1756],
          [-0.1017, -0.2588, -0.0915]]]])conv5.biastensor([-0.0841])fc1.weighttensor([[-0.0311,  0.0026, -0.0248,  ...,  0.0013, -0.0273,  0.0310],
        [ 0.0169,  0.0031,  0.0243,  ..., -0.0322,  0.0251,  0.0260],
        [ 0.0240,  0.0057,  0.0153,  ...,  0.0276,  0.0121, -0.0025],
        ...,
        [-0.0143,  0.0129, -0.0307,  ..., -0.0163,  0.0124, -0.0358],
        [-0.0305, -0.0277,  0.0090,  ...,  0.0285,  0.0258, -0.0122],
        [-0.0265,  0.0163, -0.0371,  ..., -0.0168,  0.0049,  0.0067]])fc1.biastensor([ 0.0278,  0.0059, -0.0084,  0.0016, -0.0325, -0.0081, -0.0046, -0.0037,
         0.0220,  0.0231,  0.0053,  0.0283, -0.0121, -0.0065, -0.0339,  0.0293,
         0.0147,  0.0017,  0.0027,  0.0247, -0.0102, -0.0316, -0.0025, -0.0095,
         0.0049,  0.0116, -0.0127,  0.0022,  0.0324,  0.0356,  0.0142, -0.0184,
         0.0267, -0.0067, -0.0287,  0.0012,  0.0072,  0.0217, -0.0331, -0.0121,
         0.0341, -0.0224,  0.0010, -0.0257,  0.0372, -0.0084, -0.0101, -0.0312,
        -0.0239,  0.0026, -0.0214, -0.0330,  0.0045,  0.0092,  0.0299, -0.0076,
         0.0196,  0.0186, -0.0071,  0.0237])fc2.weighttensor([[ 0.0478, -0.1183,  0.1150,  0.0061, -0.0067, -0.0270, -0.0917, -0.0131,
         -0.0193, -0.0986, -0.0502, -0.0077,  0.0405, -0.0664,  0.1295,  0.1144,
         -0.0111, -0.0903,  0.0466, -0.0365,  0.0155, -0.0949, -0.1179,  0.1247,
         -0.0894, -0.0226,  0.1173, -0.0657, -0.0890,  0.0907, -0.0319, -0.0921,
         -0.0791,  0.0257, -0.0652, -0.0606, -0.0201, -0.0961, -0.1060,  0.1216,
         -0.0818,  0.1084,  0.0760, -0.0968,  0.1117,  0.1173, -0.0852, -0.0722,
          0.0837, -0.1170,  0.0120,  0.1028,  0.0558,  0.1150, -0.0636, -0.1152,
          0.0595, -0.1181,  0.1082,  0.0483]])fc2.biastensor([0.0253])

*********************************

subject 5
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

standardorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.022830181499942925, 26262, 1.0, 0.015563307394487675, 600, 25681, 406, 0]


standardorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.02257591150242691, 26545, 1.0, 0.004216659638900602, 600, 25977, 110, 0]
conv1.weighttensor([[[[-0.2985, -0.0278, -0.2480],
          [-0.0873,  0.3022, -0.1712],
          [ 0.1222,  0.0465, -0.1710]]]])conv1.biastensor([-0.1941])conv2.weighttensor([[[[-0.1799,  0.2568,  0.2474],
          [ 0.0956, -0.2693, -0.2642],
          [ 0.1363, -0.1150,  0.0628]]]])conv2.biastensor([-0.0405])conv3.weighttensor([[[[-0.2495,  0.2873,  0.2796],
          [ 0.0216,  0.3057,  0.0562],
          [ 0.2032, -0.1910, -0.0372]]]])conv3.biastensor([0.0035])conv4.weighttensor([[[[-0.0891,  0.2667, -0.2152],
          [ 0.1374,  0.2651, -0.1088],
          [-0.0795, -0.0734,  0.1261]]]])conv4.biastensor([-0.0743])conv5.weighttensor([[[[ 0.1705,  0.2530,  0.2003],
          [-0.2617,  0.1166, -0.2305],
          [ 0.0320,  0.1602, -0.1925]]]])conv5.biastensor([-0.2656])fc1.weighttensor([[ 0.0038,  0.0086,  0.0203,  ...,  0.0312, -0.0258,  0.0026],
        [ 0.0101, -0.0059,  0.0085,  ...,  0.0194, -0.0171, -0.0368],
        [ 0.0049,  0.0274,  0.0204,  ..., -0.0092, -0.0357,  0.0192],
        ...,
        [ 0.0259, -0.0160, -0.0290,  ..., -0.0077,  0.0215, -0.0134],
        [-0.0062,  0.0343,  0.0088,  ...,  0.0267,  0.0268,  0.0336],
        [ 0.0192,  0.0057,  0.0358,  ...,  0.0081, -0.0120,  0.0309]])fc1.biastensor([ 0.0018, -0.0083, -0.0164,  0.0042,  0.0059,  0.0044, -0.0139,  0.0068,
         0.0034, -0.0261,  0.0152,  0.0193, -0.0160, -0.0018,  0.0142,  0.0139,
         0.0296, -0.0070, -0.0002,  0.0075,  0.0314, -0.0216, -0.0272,  0.0320,
         0.0178,  0.0283, -0.0200,  0.0276, -0.0277,  0.0312, -0.0263, -0.0300,
        -0.0038,  0.0156, -0.0114,  0.0096,  0.0164,  0.0353, -0.0121,  0.0370,
         0.0279, -0.0365, -0.0372,  0.0152,  0.0012,  0.0161,  0.0104, -0.0078,
        -0.0263,  0.0071, -0.0119, -0.0024,  0.0315, -0.0029, -0.0028,  0.0154,
         0.0361,  0.0200, -0.0136, -0.0284])fc2.weighttensor([[-0.1209,  0.0627, -0.0984,  0.0511,  0.1226,  0.0179, -0.0442, -0.1057,
         -0.0794, -0.0501, -0.0828, -0.0293, -0.1168,  0.0932,  0.0542, -0.0636,
          0.0471,  0.0123, -0.1171,  0.0492,  0.0033, -0.0209,  0.0134,  0.0211,
         -0.0672, -0.0755, -0.0409, -0.0722, -0.1212,  0.1216,  0.1113,  0.0807,
          0.0326, -0.0241, -0.0220,  0.0585, -0.0743,  0.1235, -0.0269,  0.0088,
          0.1200, -0.1138, -0.0664,  0.0590,  0.1080,  0.0342, -0.0568,  0.0108,
          0.1099, -0.0802,  0.1260,  0.0982, -0.0826,  0.0878,  0.1199, -0.1206,
          0.0714, -0.0591,  0.1059, -0.0680]])fc2.biastensor([0.0248])

*********************************

subject 6
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

standardorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.0, 5, 0.0, 0.9996429336570735, 0, 10, 27996, 600]


standardorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.011891694109037688, 2465, 0.10833333333333334, 0.8071484681853889, 65, 5401, 22605, 535]
conv1.weighttensor([[[[-0.0431,  0.3088, -0.0671],
          [ 0.1703,  0.2495,  0.1720],
          [-0.0438, -0.0272,  0.2995]]]])conv1.biastensor([0.0419])conv2.weighttensor([[[[-0.3134,  0.0350,  0.2354],
          [-0.1529,  0.0714,  0.2342],
          [ 0.0839,  0.2912,  0.0846]]]])conv2.biastensor([0.2102])conv3.weighttensor([[[[ 0.0537,  0.1586, -0.1069],
          [-0.1869, -0.1397, -0.2844],
          [ 0.2638,  0.1170, -0.1568]]]])conv3.biastensor([-0.2086])conv4.weighttensor([[[[ 0.2932,  0.2529,  0.2808],
          [-0.2292, -0.1965,  0.1055],
          [-0.0868,  0.0424, -0.0555]]]])conv4.biastensor([0.1612])conv5.weighttensor([[[[ 0.1867,  0.0007, -0.0965],
          [ 0.1205, -0.0189, -0.1234],
          [ 0.0077, -0.2730,  0.1365]]]])conv5.biastensor([-0.0604])fc1.weighttensor([[-0.0264, -0.0051, -0.0021,  ..., -0.0360, -0.0115,  0.0360],
        [-0.0240, -0.0310,  0.0037,  ...,  0.0276, -0.0162,  0.0014],
        [ 0.0122, -0.0246,  0.0343,  ..., -0.0304, -0.0202,  0.0108],
        ...,
        [ 0.0352, -0.0119,  0.0025,  ...,  0.0061, -0.0208, -0.0185],
        [ 0.0205,  0.0359,  0.0273,  ..., -0.0202,  0.0258,  0.0171],
        [ 0.0071,  0.0370,  0.0314,  ..., -0.0088,  0.0104,  0.0156]])fc1.biastensor([ 0.0205, -0.0359, -0.0031, -0.0121,  0.0360, -0.0335,  0.0275,  0.0157,
         0.0267, -0.0065,  0.0072,  0.0355,  0.0206,  0.0212,  0.0085,  0.0312,
        -0.0219,  0.0165, -0.0208, -0.0137, -0.0192, -0.0194, -0.0257, -0.0155,
         0.0132,  0.0026, -0.0030,  0.0262, -0.0041,  0.0158, -0.0178,  0.0215,
         0.0220, -0.0031, -0.0335, -0.0148,  0.0231, -0.0047,  0.0266,  0.0277,
        -0.0103,  0.0148,  0.0272,  0.0039,  0.0063,  0.0286, -0.0015, -0.0100,
        -0.0169, -0.0083,  0.0016, -0.0235,  0.0152,  0.0255, -0.0179, -0.0149,
        -0.0337, -0.0128,  0.0113, -0.0042])fc2.weighttensor([[ 0.0292,  0.0629,  0.0282, -0.0518, -0.0514, -0.0134,  0.0367,  0.0372,
         -0.1245,  0.1009, -0.0995, -0.0087,  0.1186, -0.0650,  0.0401, -0.0091,
         -0.0629, -0.0684,  0.0529, -0.0786, -0.1116,  0.0329,  0.0302, -0.0824,
         -0.1239,  0.0965, -0.0645,  0.0673,  0.0126, -0.0743, -0.0267, -0.1280,
          0.1290,  0.0804, -0.0819,  0.0324, -0.1250,  0.0168,  0.0534, -0.0448,
         -0.0148, -0.1199,  0.0800,  0.0050, -0.1052,  0.0269,  0.0471, -0.0342,
          0.0260,  0.0735,  0.0948,  0.0915, -0.0470,  0.0809, -0.0338, -0.1170,
          0.0736, -0.0446,  0.1188, -0.1000]])fc2.biastensor([0.0331])

*********************************

subject 7
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

standardorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.023176761433868973, 25429, 1.0, 0.024420354153003355, 600, 25288, 633, 0]


standardorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.022838002436053592, 26249, 1.0, 0.009606110875352031, 600, 25672, 249, 0]
conv1.weighttensor([[[[ 0.2165, -0.1502, -0.2652],
          [ 0.0621,  0.2564, -0.0859],
          [-0.1277,  0.1786,  0.0425]]]])conv1.biastensor([0.1321])conv2.weighttensor([[[[ 0.1931, -0.0474,  0.0613],
          [ 0.1511, -0.2965, -0.2862],
          [-0.1708,  0.1166, -0.0940]]]])conv2.biastensor([-0.0150])conv3.weighttensor([[[[-0.2516, -0.1806, -0.1302],
          [-0.0527, -0.0709, -0.1583],
          [-0.2508,  0.0612,  0.2032]]]])conv3.biastensor([0.0240])conv4.weighttensor([[[[-0.1748, -0.2258,  0.1301],
          [ 0.2881,  0.1906, -0.1256],
          [ 0.0353,  0.2754, -0.1200]]]])conv4.biastensor([-0.1934])conv5.weighttensor([[[[ 0.1284, -0.0901,  0.1692],
          [ 0.1800,  0.1749, -0.1653],
          [ 0.3123,  0.2213, -0.2403]]]])conv5.biastensor([-0.1026])fc1.weighttensor([[-1.3698e-02,  3.0187e-02, -3.0228e-02,  ..., -3.1068e-02,
         -1.5369e-03,  1.6445e-02],
        [-7.1693e-03,  1.0160e-02,  9.1166e-03,  ..., -2.2331e-02,
         -3.5343e-02,  2.3752e-02],
        [ 3.4242e-02, -2.2960e-02,  2.4522e-02,  ...,  4.9323e-03,
         -1.1622e-02,  2.7461e-02],
        ...,
        [-4.6756e-05, -1.4822e-02,  2.1875e-02,  ..., -2.2830e-02,
          3.5271e-02,  1.4389e-04],
        [-1.4717e-02,  2.5697e-02,  1.5040e-02,  ..., -2.1208e-02,
          2.3555e-02, -1.5694e-02],
        [ 1.1619e-02,  2.1556e-02, -6.5549e-04,  ..., -2.7785e-02,
          1.2538e-02,  2.4129e-03]])fc1.biastensor([ 0.0336, -0.0172, -0.0285, -0.0358, -0.0349,  0.0031,  0.0262,  0.0142,
        -0.0335, -0.0116,  0.0240,  0.0177,  0.0072,  0.0058,  0.0316,  0.0011,
         0.0184, -0.0401, -0.0187,  0.0019, -0.0149, -0.0091,  0.0290, -0.0064,
        -0.0127, -0.0249,  0.0359,  0.0302, -0.0197,  0.0228, -0.0030,  0.0286,
        -0.0214, -0.0226, -0.0271, -0.0364, -0.0276, -0.0026,  0.0059,  0.0279,
         0.0307, -0.0166,  0.0307,  0.0130, -0.0038,  0.0055, -0.0277,  0.0251,
        -0.0200,  0.0243,  0.0264,  0.0346,  0.0266,  0.0300, -0.0105, -0.0106,
         0.0335, -0.0319,  0.0206,  0.0148])fc2.weighttensor([[ 0.0959,  0.0461, -0.0843, -0.0337, -0.0790,  0.0725,  0.1210, -0.0068,
          0.0855, -0.0742,  0.0229,  0.1017, -0.0401, -0.0395, -0.0430, -0.1120,
          0.1090,  0.1130,  0.0322,  0.0859,  0.0879,  0.0764, -0.1016,  0.0226,
         -0.0007,  0.0951, -0.0918, -0.0829,  0.1153,  0.0555, -0.0560,  0.0123,
         -0.0614, -0.1182, -0.0930,  0.0052, -0.0913, -0.0301, -0.1187,  0.0714,
         -0.0366,  0.0781,  0.0330,  0.1167, -0.0660,  0.0022, -0.0762,  0.0089,
         -0.0411, -0.0569,  0.0207, -0.0702, -0.0412, -0.0214, -0.0266, -0.0896,
          0.0092,  0.1210,  0.0079, -0.0348]])fc2.biastensor([0.0890])

*********************************

subject 8
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

standardorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.023390900939534522, 25638, 1.0, 0.0033419534513626416, 600, 25051, 84, 0]


standardorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.023740750999089937, 25255, 1.0, 0.018380743982494528, 600, 24673, 462, 0]
conv1.weighttensor([[[[-0.3239,  0.0006, -0.1336],
          [ 0.2645, -0.2450, -0.0906],
          [ 0.0830, -0.1299,  0.3300]]]])conv1.biastensor([-0.1617])conv2.weighttensor([[[[-0.0217, -0.0243,  0.1414],
          [-0.1484,  0.1726,  0.0155],
          [ 0.2001, -0.1700, -0.2976]]]])conv2.biastensor([0.0790])conv3.weighttensor([[[[-0.2264,  0.2218,  0.1856],
          [-0.1561,  0.0161,  0.2418],
          [ 0.2568, -0.1756,  0.0895]]]])conv3.biastensor([-0.2265])conv4.weighttensor([[[[-0.2073, -0.0677, -0.3295],
          [-0.0495, -0.1393, -0.2115],
          [ 0.0940,  0.0784,  0.0100]]]])conv4.biastensor([0.1884])conv5.weighttensor([[[[-0.1134,  0.1210,  0.2944],
          [ 0.0935,  0.1992, -0.3095],
          [ 0.1509, -0.2625, -0.0949]]]])conv5.biastensor([-0.2133])fc1.weighttensor([[-0.0139,  0.0337,  0.0323,  ..., -0.0070,  0.0239,  0.0228],
        [ 0.0368, -0.0058, -0.0194,  ..., -0.0267, -0.0213,  0.0345],
        [ 0.0182, -0.0357, -0.0362,  ...,  0.0249,  0.0349,  0.0292],
        ...,
        [-0.0284,  0.0033, -0.0241,  ..., -0.0028,  0.0232,  0.0354],
        [ 0.0030,  0.0036, -0.0120,  ..., -0.0272, -0.0232,  0.0329],
        [ 0.0244,  0.0152, -0.0352,  ..., -0.0022, -0.0023,  0.0015]])fc1.biastensor([ 0.0167, -0.0091, -0.0077,  0.0242, -0.0304,  0.0296,  0.0348,  0.0234,
         0.0338, -0.0078,  0.0324, -0.0219, -0.0093,  0.0012, -0.0179, -0.0160,
        -0.0092,  0.0227,  0.0252, -0.0257, -0.0231,  0.0211,  0.0303,  0.0304,
         0.0273, -0.0050, -0.0364, -0.0204, -0.0139, -0.0008,  0.0273, -0.0336,
         0.0028,  0.0162,  0.0183,  0.0106, -0.0085, -0.0208, -0.0207,  0.0124,
         0.0267, -0.0359,  0.0207,  0.0330, -0.0234, -0.0095,  0.0052,  0.0064,
         0.0044, -0.0075,  0.0336,  0.0371, -0.0064,  0.0236,  0.0167,  0.0002,
         0.0192,  0.0204, -0.0371, -0.0316])fc2.weighttensor([[-0.0945, -0.1242,  0.0375,  0.1249,  0.0601, -0.0661,  0.0141, -0.1187,
         -0.0128,  0.0216,  0.0713, -0.1267,  0.0815,  0.1179,  0.0067, -0.0060,
         -0.0544,  0.1018, -0.0499, -0.0999, -0.1094,  0.1287,  0.0436,  0.1159,
         -0.1225,  0.0145,  0.1078, -0.0003, -0.1211,  0.1228, -0.0866,  0.0347,
          0.0314, -0.1216,  0.0529,  0.0848, -0.0324,  0.0568,  0.1184,  0.0344,
          0.0633, -0.0350,  0.0252, -0.0055,  0.0054, -0.0995, -0.0808, -0.0914,
         -0.0769,  0.0020,  0.1178,  0.0407,  0.1030, -0.0328, -0.0871,  0.0342,
          0.0725, -0.0225, -0.0602,  0.0795]])fc2.biastensor([-0.0997])

*********************************

subject 9
precision, usefulness, sensitivity, specificity, truePositive, falsePositive, trueNegative, falseNegative

standardorder, threshold = 0.01, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.023494400501213878, 25495, 1.0, 0.015164678935313166, 600, 24938, 384, 0]


standardorder, threshold = 0.02, net number = 5 3x3  conv, 10 iterations, batchsize = 1000

[0.023377230577417595, 25617, 1.0, 0.010109785956875445, 600, 25066, 256, 0]
conv1.weighttensor([[[[ 0.2101,  0.1982,  0.1867],
          [ 0.0099, -0.0789, -0.1695],
          [-0.2630,  0.1757, -0.1144]]]])conv1.biastensor([0.2284])conv2.weighttensor([[[[ 0.1028,  0.3115,  0.3039],
          [ 0.0853, -0.2460,  0.1992],
          [ 0.1516,  0.0137, -0.1714]]]])conv2.biastensor([-0.0451])conv3.weighttensor([[[[-0.1963, -0.0728,  0.1955],
          [-0.2058,  0.0230, -0.2707],
          [ 0.0250, -0.0653,  0.2113]]]])conv3.biastensor([-0.1043])conv4.weighttensor([[[[-0.2624, -0.0871,  0.2030],
          [-0.0482, -0.1655, -0.0944],
          [ 0.0632, -0.1712, -0.2545]]]])conv4.biastensor([-0.0581])conv5.weighttensor([[[[-0.1866,  0.0981, -0.2953],
          [ 0.0050,  0.1113, -0.2182],
          [ 0.2017, -0.1925, -0.1587]]]])conv5.biastensor([-0.2632])fc1.weighttensor([[ 0.0334,  0.0069, -0.0315,  ..., -0.0310, -0.0079,  0.0007],
        [ 0.0148, -0.0312, -0.0225,  ..., -0.0227, -0.0007, -0.0140],
        [ 0.0370,  0.0126,  0.0360,  ..., -0.0029, -0.0117,  0.0340],
        ...,
        [ 0.0255,  0.0172,  0.0001,  ...,  0.0025, -0.0308, -0.0288],
        [ 0.0326, -0.0157, -0.0287,  ...,  0.0066,  0.0045,  0.0003],
        [-0.0058,  0.0145,  0.0324,  ...,  0.0289, -0.0237, -0.0022]])fc1.biastensor([-0.0303,  0.0028,  0.0115, -0.0188,  0.0226, -0.0079,  0.0163, -0.0127,
         0.0265,  0.0036,  0.0210,  0.0254, -0.0181, -0.0371, -0.0132,  0.0058,
         0.0348, -0.0305,  0.0155, -0.0142,  0.0099,  0.0219, -0.0271, -0.0135,
        -0.0106,  0.0014,  0.0349,  0.0295, -0.0213,  0.0089,  0.0167,  0.0345,
        -0.0016,  0.0251, -0.0290, -0.0260,  0.0002, -0.0183, -0.0299,  0.0058,
         0.0334, -0.0319,  0.0005,  0.0156, -0.0197,  0.0078, -0.0028, -0.0240,
        -0.0358,  0.0045,  0.0104,  0.0026,  0.0178, -0.0362,  0.0046, -0.0177,
         0.0150, -0.0075,  0.0007,  0.0044])fc2.weighttensor([[ 0.0203,  0.0031,  0.0011,  0.0810, -0.0674, -0.0529, -0.0396, -0.1009,
         -0.0777, -0.0947,  0.0042, -0.0473,  0.0184,  0.0187,  0.1092, -0.0110,
          0.0261,  0.0595, -0.1076, -0.0159,  0.0441, -0.0796,  0.0041, -0.0257,
         -0.0726,  0.0177,  0.0543,  0.0126,  0.0979, -0.0369, -0.0342,  0.0440,
          0.0324, -0.0356,  0.1128, -0.0316, -0.0439, -0.0596,  0.0367,  0.1084,
          0.0784, -0.0567, -0.0983, -0.1141, -0.0406, -0.0486, -0.0815, -0.0109,
          0.0889, -0.0970,  0.0758,  0.0445,  0.0706, -0.0632, -0.0780,  0.1151,
          0.0012,  0.0265,  0.1023, -0.0533]])fc2.biastensor([0.0230])